--- PhysicoChemCalculatingFormulationHandler.java
+++ PhysicoChemCalculatingFormulationHandler.java
@@ -3,6 +3,9 @@
  */
 package fr.becpg.repo.product.formulation;
 
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
@@ -11,9 +14,10 @@
 import org.alfresco.service.namespace.QName;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.springframework.extensions.surf.util.I18NUtil;
 
 import fr.becpg.model.BeCPGModel;
 import fr.becpg.model.PLMModel;
 import fr.becpg.repo.formulation.FormulateException;
 import fr.becpg.repo.product.data.EffectiveFilters;
 import fr.becpg.repo.product.data.ProductData;
@@ -45,6 +54,6 @@
 			}
 
 			formulateSimpleList(formulatedProduct, formulatedProduct.getPhysicoChemList());
-			
+
 			computeFormulatedList(formulatedProduct, formulatedProduct.getPhysicoChemList(), PLMModel.PROP_PHYSICO_CHEM_FORMULA,
 					"message.formulate.physicoChemList.error");
@@ -49,7 +58,7 @@
 			computeFormulatedList(formulatedProduct, formulatedProduct.getPhysicoChemList(), PLMModel.PROP_PHYSICO_CHEM_FORMULA,
 					"message.formulate.physicoChemList.error");
-			
+
 			formulatedProduct.getPhysicoChemList().forEach(n -> {
 				n.setUnit( (String) nodeService.getProperty(n.getPhysicoChem(), PLMModel.PROP_PHYSICO_CHEM_UNIT));
 			});
 
@@ -52,8 +61,10 @@
 			formulatedProduct.getPhysicoChemList().forEach(n -> {
 				n.setUnit( (String) nodeService.getProperty(n.getPhysicoChem(), PLMModel.PROP_PHYSICO_CHEM_UNIT));
 			});
 
+			checkPhysicoChemOfFormulatedProduct(formulatedProduct);
+
 		}
 		return true;
 	}
 
