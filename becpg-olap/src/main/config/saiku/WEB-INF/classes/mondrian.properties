mondrian­.­util­.­memoryMonitor­.­enable=true


# This software is subject to the terms of the Eclipse Public License v1.0
# Agreement, available at the following URL:
# http://www.eclipse.org/legal/epl-v10.html.
# You must accept the terms of that agreement to use this software.
#
# Copyright (C) 2001-2005 Julian Hyde
# Copyright (C) 2005-2011 Pentaho and others
# All Rights Reserved.

###############################################################################
# String property that is the AggRule element's tag value.
#
# Normally, this property is not set by a user.
#
#mondrian.rolap.aggregates.rule.tag=default

###############################################################################
# String property containing the name of the file which defines the
# rules for recognizing an aggregate table. Can be either a resource in
# the Mondrian jar or a URL.
#
# The default value is "/DefaultRules.xml", which is in the
# mondrian.rolap.aggmatcher package in Mondrian.jar.
#
# Normally, this property is not set by a user.
#
#mondrian.rolap.aggregates.rules=/DefaultRules.xml

###############################################################################
# Alerting action to take in case native evaluation of a function is
# enabled but not supported for that function's usage in a particular
# query.  (No alert is ever raised in cases where native evaluation would
# definitely have been wasted effort.)
#
# Recognized actions:
#
#
# * OFF:  do nothing (default action, also used if
# unrecognized action is specified)
# * WARN:  log a warning to RolapUtil logger
# * ERROR:  throw an instance of
# NativeEvaluationUnsupportedException
#
#mondrian.native.unsupported.alert=OFF

###############################################################################
# Boolean property that controls whether the MDX parser resolves uses
# case-sensitive matching when looking up identifiers. The default is
# false.
#
#mondrian.olap.case.sensitive=false

###############################################################################
# Property that contains the URL of the catalog to be used by
# mondrian.tui.CmdRunner and XML/A Test.
#
#mondrian.catalogURL=

###############################################################################
# Integer property that, if set to a value greater than zero, sets a hard limit on the
# number of cells that are batched together when building segments.
#
#mondrian.rolap.cellBatchSize=-1

###############################################################################
# Boolean property that controls whether aggregate tables
# are ordered by their volume or row count.
#
# If true, Mondrian uses the aggregate table with the smallest volume
# (number of rows multiplied by number of columns); if false, Mondrian
# uses the aggregate table with the fewest rows.
#
#mondrian.rolap.aggregates.ChooseByVolume=false

###############################################################################
# Boolean property that controls whether sibling members are
# compared according to order key value fetched from their ordinal
# expression.  The default is false (only database ORDER BY is used).
#
#mondrian.rolap.compareSiblingsByOrderKey=false

###############################################################################
# Property that defines
# when to apply the crossjoin optimization algorithm.
#
# If a crossjoin input list's size is larger than this property's
# value and the axis has the "NON EMPTY" qualifier, then
# the crossjoin non-empty optimizer is applied.
# Setting this value to '0' means that for all crossjoin
# input lists in non-empty axes will have the optimizer applied.
# On the other hand, if the value is set larger than any possible
# list, say Integer.MAX_VALUE, then the optimizer
# will never be applied.
#
#mondrian.olap.fun.crossjoin.optimizer.size=0

###############################################################################
# Property that defines
# the name of the plugin class that resolves data source names to
# javax.sql.DataSource objects. The class must implement the
# mondrian.spi.DataSourceResolver interface. If not specified,
# the default implementation uses JNDI to perform resolution.
#
# Example:
# mondrian.spi.dataSourceResolverClass=mondrian.spi.impl.JndiDataSourceResolver
#
#mondrian.spi.dataSourceResolverClass=

###############################################################################
# Boolean property that controls whether a RolapStar's
# aggregate data cache is cleared after each query.
# If true, no RolapStar will cache aggregate data from one
# query to the next (the cache is cleared after each query).
#
#mondrian.rolap.star.disableCaching=false

###############################################################################
# Boolean property that controls whether the data from segments
# is cached locally. To create custom caches, look for the
# SegmentCache SPI.
#
#mondrian.rolap.star.disableLocalSegmentCache=false

###############################################################################
# Property that controls whether aggregation cache hit / miss
# counters will be enabled.
#
# Note that this will affect performance due to existence of sync
# blocks.
#
# @deprecated This property is no longer used, and will be removed in
# mondrian-4.0.
#
#mondrian.rolap.agg.enableCacheHitCounters=false

###############################################################################
# If disabled, Mondrian will throw an exception if someone attempts to
# perform a drillthrough of any kind.
#
#mondrian.drillthrough.enable=true

###############################################################################
# Boolean property that controls whether to use a cache for frequently
# evaluated expressions. With the cache disabled, an expression like
# Rank([Product].CurrentMember,
# Order([Product].MEMBERS, [Measures].[Unit Sales])) would perform
# many redundant sorts. The default is true.
#
#mondrian.expCache.enable=true


# Allow the use of aggregates
mondrian.rolap.aggregates.Use=false
mondrian.rolap.aggregates.Read=false

# mondrian.properties
mondrian.result.limit=5000000

mondrian.jdbcDrivers=com.mysql.jdbc.Driver
######################################################################
# Integer property indicating timeout value, in seconds, for queries.
# Default of 0 indicates no timeout
mondrian.rolap.queryTimeout=300

# Property which controls the amount of tracing displayed.  Seperate from log4j.
mondrian.trace.level=0

# Maximum number of simultaneous queries the system will allow.
mondrian.query.limit=40

# Property which determines when a dimension is considered "large".
mondrian.rolap.LargeDimensionThreshold=100

# Boolean property that controls whether a RolapStar's aggregate data cache is cleared after each query.
mondrian.rolap.star.disableCaching=false

# Boolean property which controls SQL pretty-print mode.
mondrian.rolap.generate.formatted.sql=false

# Boolean property which controls whether the MDX parser resolves uses case-sensitive matching when looking up identifiers.
mondrian.olap.case.sensitive=true

# Boolean property which controls whether to use a cache for frequently evaluated expressions.
mondrian.expCache.enable=true

# if enabled some NON EMPTY CrossJoin will be computed in SQL
mondrian.native.crossjoin.enable=true

# if enabled some TopCount will be computed in SQL
mondrian.native.topcount.enable=false

# if enabled some Filter() will be computed in SQL
mondrian.native.filter.enable=true

# some NON EMPTY set operations like member.children, level.members and member descendants will be computed in SQL
mondrian.native.nonempty.enable=false

# Max number of constraints in a single `IN' SQL clause.
mondrian.rolap.maxConstraints=1000

# Property which defines the maximum number of passes allowable while evaluating an MDX expression.
mondrian.rolap.evaluate.MaxEvalDepth=10
mondrian.rolap.maxQueryThreads=100


###############################################################################
# Boolean property indicating whether errors related to non-existent members
# should be ignored during schema load. If so, the non-existent member is 
# treated as a null member.
mondrian.rolap.ignoreInvalidMembers=true

###############################################################################
# Boolean property indicating whether errors related to non-existent members
# should be ignored during query validation. If so, the non-existent member is 
# treated as a null member.
mondrian.rolap.ignoreInvalidMembersDuringQuery=true

###############################################################################
# Integer property indicating the maximum number of iterations allowed when
# iterating over members to compute aggregates.  Default of 0 indicates no
# limit.
mondrian.rolap.iterationLimit=5000000

###############################################################################
# String property which controls alerting behavior in case native
# evaluation of a function is enabled but not supported for that
# function's usage in a particular query.  (No alert is ever raised in 
# cases where native evaluation would definitely have been wasted
# effort.)  Values recognized are { OFF, WARN, ERROR }.
mondrian.native.unsupported.alert=WARN

###############################################################################
# Boolean property which controls whether sibling members are
# compared according to order key value fetched from their ordinal
# expression.  The default is false (only database ORDER BY is used).
mondrian.rolap.compareSiblingsByOrderKey=true

###############################################################################
# If true, a division having a non-null numerator and a null denominator
# evaluates to Infinity. If false, the same division results in Null.
mondrian.olap.NullDenominatorProducesNull=true

###############################################################################
# Boolean property which controls whether to expand the non native sub-
# expressions of a native expression into MemberLists
mondrian.native.ExpandNonNative=true

###############################################################################
# Property determines if elements of dimension (levels, hierarchies, members)
# need to be prefixed with dimension name in MDX query.
#
# For example when the property is true, the following queries
# will error out. The same queries will work when this property
# is set to false.
#     * select {[M]} on 0 from sales
#     * select {[USA]} on 0 from sales
#     * select {[USA].[CA].[Santa Monica]}  on 0 from sales
#
# When the property is set to true, any query where elements are
# prefixed with dimension name as below will work
#     * select {[Gender].[F]} on 0 from sales
#     * select {[Customers].[Santa Monica]} on 0 from sales
#
# Please note that this property does not govern the behaviour where in
#     * [Gender].[M]
# is resolved into a fully qualified
#     * [Gender].[All Gender].[M]
#
# In a scenario where the schema is very large and dimensions have large
# number of members a MDX query that has a invalid member in it will cause
# mondrian to to go through all the dimensions, levels, hierarchies, members
# and properties trying to resolve the element name. This behaviour consumes
# considerable time and resources on the server. Setting this property to
# true will make it fail fast in a scenario where it is desirable
#
mondrian.olap.elements.NeedDimensionPrefix=true
