control.association.description = The association control is used to allow objects in the 	repository to be picked and ultimately associated with the node being	edited. The control uses the JavaScript Alfresco.ObjectFinder	component to allow 	the user to browse the repository and pick 	objects.
control.association.param.compactMode=Determines whether the picker will be shown in compact mode
control.association.param.displayMode=Determines the way to display current values,when set to "list" the current items are shown in a richlist withbuttons to manage the current items
control.association.param.showTargetLink=Determines whether a link to the document detailspage will berendered to content items" only applicable whendisplayMode is set to"items")
control.association.param.selectedValueContextProperty=The name of a component bindingproperty or urlparameter that contains the values of the items topre-select in thepicker
control.association.param.selectActionLabel=The label of the button that launches the picker
control.association.param.selectActionLabelId=The resource bundle key of the label of the button that launches 	the picker
control.association.param.forceEditable=Forces the control to be editable
control.association.param.startLocation=Determines where to start the picker, the value can beany ofthevalues below, the default is "{company home}". CustomizedstartLocations can also be implemented, see NodeLocatorService formore details.{companyhome}: The 'Company Home' space{userhome}: Thecurrent users home space{siteshome}: The 'Sites' space{doclib}: Theroot of the Document Library for the site the item is part of.If theitem is not part of a site the default is used. For "create"formsthe"item" is considered to be the location the new item isbeingcreatedin{self}: The item being edited for "edit" forms and thelocation theitem isbeing created in for "create" forms. Thisoptional="true"lywilltypically used with cm:folder types andsub-types{parent}: Theparent of the item being edited or the parentof the locationthe newitem is being created in{ancestor}: Anancestor node, same as {parent}without parameters. A typeparametercan limit the ancestor node to acertain type or aspectparameter canlimit to an ancestor node with acertain aspectapplied. The node andaspect parameters can be combined.A NodeRef e.g.workspace://SpacesStore/abcd-12345: Starts the pickerin a specificlocation represented by the NodeRefAn XPath e.g./app:company_home/app:dictionary: Starts the picker in aspecificlocation represented by the XPath
control.association.param.startLocationParams=Query string formatted parameters for startLocation
control.association.param.allowNavigationToContentChildren=Determines whether the picker can 	navigate the	children of content nodes, the default is false.
control.association.param.editorAppearance=full


control.authority.description=The authority control is used to search for users and/orgroups in therepository.
control.authority.param.compactMode=Determines whether the picker will be shown in compact mode
control.authority.param.forceEditable=Forces the control to be editable


control.category.description=The category control is used to allow the user to selectcategories forthe node being edited. The control uses the JavaScriptAlfresco.ObjectPicker component to allow the user to browse thecategory hierarchy
control.category.param.compactMode=Determines whether the picker will be shown in compact mode
control.category.param.forceEditable=Forces the control to be editable
control.category.param.parentNodeRef=The nodeRef of the category to start the picker,defaults to theroot of the category tree
control.category.param.showSubCategoriesOption=Shows a checkbox allowing sub-categories to beincluded in anadvanced search




control.checkbox.description=The checkbox control renders a standard HTML checkboxcontrol.
control.checkbox.param.styleClass=Allows a custom CSS class to be applied to the checkbox
control.checkbox.param.style=AllowsCSS rules to applied directly to the checkbox
control.checkbox.param.forceEditable=Forces the control to be editable

control.content.description=The content control renders an input area appropriate forthe mime typeof the content. Plain text content is shown in astandard textareawhereas rich text content i.e. HTML is rendered in aTinyMCE control,the list of mime types considered to be plain andrich content areconfigurable" see below). If the mime type of thecontent is notrecognized the control is automatically hidden. Thecontent controlis also only rendered when the form is in "edit" or"create" mode.
control.content.param.rows=The number of rows the textarea will have" when editing plain text content
control.content.param.columns=The number of columns the textarea will have" when editing plain text content
control.content.param.styleClass=Allows a custom CSS class to be applied to the textarea" when editingplain text content)
control.content.param.style=AllowsCSS rules to applied directly to the textarea" when editingplain textcontent)
control.content.param.editorAppearance=The preset set of configuration options to use for theTinyMCEcontrol" when editing rich text content), accepted values are"full","explorer", "webeditor" and "custom". If ommitted a defaultconfiguration is used
control.content.param.editorParameters=Used when the "custom" preset is used for the"editorAppearance"parameter. The value of this parameter is sentdirectly to TinyMCE soshould contain valid TinyMCE configurationoptions.
control.content.param.editorHeight=The height in pixels of the TinyMCE control" when editing rich textcontent)
control.content.param.editorWidth=The width in pixels of the TinyMCE control" when editing rich textcontent)
control.content.param.plainMimeTypes=Comma separated list of mime types thatrepresent plain text,default is "text/plain,text/xml"
control.content.param.richMimeTypes=Comma separated list of mime types thatrepresent rich text,default is "text/html,text/xhtml"
control.content.param.forceEditor=Forces the textarea to be displayed if the mime type of the contentis not recognized or not specified, default is false
control.content.param.forceEditable=Forces the control to be editable, default is false



control.date.description=The date control renders a date field allowing free formentry of datesas well as a calendar widget allowing dates to beselected visually.If appropriate a time field is also rendered.
control.date.param.showTime=Determines whether the time entry field should be displayed
control.date.param.forceEditable=Forces the control to be editable





control.encoding.description=The encoding control renders a selectable list ofencodings.
control.encoding.param.property=Thename of a content property to retrieve the current encoding from,ifomitted the field.value value is used
control.encoding.param.styleClass=Allows a custom CSS class to be applied to the select list
control.encoding.param.style=AllowsCSS rules to applied directly to the select list



control.hidden.description=The hidden control renders a standard HMTL inputtype="hidden" control,the value is either taken from the value of thegiven contextPropertyparameter, from a URL argument with the name ofthe field or from thefield's value.
control.hidden.param.contextProperty=The name of a contextproperty to retrieve the value from

control.info.description=The info control renders the field as if the form is inview moderegardless of the actual mode the form is in, this can beuseful whenthe data needs to be present on an edit form but notrendered as adisabled input control.

control.invisible.description=The invisible control literally renders nothing at all,it can be usedwhen a form definition needs to be requested andreturned but notdisplayed.

control.mimetype.description=The mimetype control renders a selectable list ofmimetypes.
control.mimetype.param.property=The name of a content property to retrieve the current mimetype from,ifomitted the field.value value is used
control.mimetype.param.styleClass=Allows a custom CSS class to be applied to the select list
control.mimetype.param.style=Allows CSS rules to applied directly to the select list

control.number.description=The number control renders a standard HTML text fieldintended foraccepting numbers. The only difference between thiscontrol and thetextfield.ftl control is the addition of a default CSSclass called"number" applied to the input element. The "number" CSSclass reducesthe width of the input element, further custom CSSclasses can stillbe applied to the control.
control.number.param.styleClass=Allows a custom CSS class to be applied to the text field
control.number.param.style=AllowsCSS rules to applied directly to the text field
control.number.param.maxLength=Defines the maximum number of characters the user can enter, mapsdirectly to the standard HTML 'maxlength' attribute
control.number.param.size=Definesthe number of characters the text field can display, maps directly tothe standard HTML 'size' attribute
control.number.param.forceEditable=Forces the control to be editable, default is false



control.period.description=The period control renders a selectable list of periodsand anexpression entry field.
control.period.param.forceEditable=Forces the control to be editable, default is false


control.richtext.description=The rich text control renders a TinyMCE editor.
control.richtext.param.editorAppearance=The preset set of configuration options to use for theTinyMCEcontrol, accepted values are "full", "explorer", "webeditor"and"custom". If ommitted a default configuration is used
control.richtext.param.editorParameters=Used when the "custom" preset is used for the"editorAppearance"parameter. The value of this parameter is sentdirectly to TinyMCE soshould contain valid TinyMCE configurationoptions.
control.richtext.param.editorHeight=The height in pixels of the TinyMCE control" when editing rich textcontent)
control.richtext.param.editorWidth=The width in pixels of the TinyMCE control" when editing rich textcontent)
control.richtext.param.forceEditable=Forces the control to be editable, default is false



control.selectone.description=The selectone control renders a standard HTML selectlist.
control.selectone.param.options=A comma separated list of options todisplay, for example"First,Second,Third". If a value for an optionalso needs to bespecified the "1|First,2|Second,3|Third" format canbe used. In thelatter case message bundle IDs can also be specifiedin place of anexplicit display value, e.g."1|{label.second},2|{label.second},3|{label.third}".
control.selectone.param.size=Thesizeof the list i.e. how many options are always visible, default is1.
control.selectone.param.styleClass=Allows a custom CSS class to be applied to the select list
control.selectone.param.style=AllowsCSS rules to applied directly to the select list
control.selectone.param.forceEditable=Forces the control to be editable, default is false




control.selectmany.description=The selectmany control renders a standard HTML selectlist allowingmultiple selections.
control.selectmany.param.options=A comma separated list of options todisplay, for example"First,Second,Third". If a value for an optionalso needs to bespecified the "First|1,Second|2,Third|3" format canbe used.
control.selectmany.param.size=Thesizeof the list i.e. how many options are always visible, thedefault is5.
control.selectmany.param.styleClass=Allows a custom CSS class to be applied to the select list
control.selectmany.param.style=AllowsCSS rules to applied directly to the select list
control.selectmany.param.forceEditable=Forces the control to be editable, default is false



control.size.description=The size control renders a read only human readablerepresentation ofthe content size.
control.size.param.property=Thename of a content property to retrieve the current content sizefrom,if omitted the field.value value is use



control.textarea.description=The textarea control renders a standard HTML textareafield.
control.textarea.param.rows=Thenumber of rows the textarea will have
control.textarea.param.columns=Thenumber of columns the textarea will have
control.textarea.param.styleClass=Allows a custom CSS class to be applied to the textarea
control.textarea.param.style=AllowsCSS rules to applied directly to the textarea
control.textarea.param.activateLinks=When set to "true" and the form is in "view" mode thecontrolwill attempt to display links as active hyperlinks
control.textarea.param.forceEditable=Forces the control to be editable, default is false




control.textfield.description=The textfield control renders a standard HTML text field.
control.textfield.param.styleClass=Allows a custom CSS class to be applied to the text field
control.textfield.param.style=AllowsCSS rules to applied directly to the text field
control.textfield.param.maxLength=Defines the maximum number of characters the user can enter, mapsdirectly to the standard HTML 'maxlength' attribute
control.textfield.param.size=Definesthe number of characters the text field can display, maps directly tothe standard HTML 'size' attribute
control.textfield.param.activateLinks=When set to "true" and the form is in "view" mode thecontrolwill attempt to display links as active hyperlinks
control.textfield.param.forceEditable=Forces the control to be editable, default is false


	
control.autocomplete.description=The autocomplete control renders an autocomplete for standard text field
control.autocomplete.param.ds=The autocomplete data source
control.autocomplete.param.parent=Indicate a parent field that autocomplete depens on
control.autocomplete.param.local=Indicate that ds is on share side
control.autocomplete.param.style=Allows CSS rules to applied directly to the text field
control.autocomplete.param.maxLength=Defines the maximum number of characters the user can enter, maps directly to the standard HTML 'maxlength' attribute
control.autocomplete.param.size= Defines 	the number of characters the text field can display, maps directly to the standard HTML 'size' attribute
control.autocomplete.param.showTooltip=Should autocomplete show tooltip
control.autocomplete.param.showPage=Should autocomplete show pagination
control.autocomplete.param.saveTitle=Should autocomplete save title instead of value

control.autocomplete-association.description=The autocomplete association control renders an autocomplete for model association
control.autocomplete-association.param.ds=The autocomplete data source (for association is not mandatory)
control.autocomplete-association.param.style=Allows CSS rules to applied directly to the text field
control.autocomplete-association.param.maxLength=Defines the maximum number of characters the user can enter, maps directly to the standard HTML 'maxlength' attribute
control.autocomplete-association.param.size=Defines 	the number of characters the text field can display, maps directly to the standard HTML 'size' attribute
control.autocomplete-association.param.parent=Indicate a parent field that autocomplete depens on
