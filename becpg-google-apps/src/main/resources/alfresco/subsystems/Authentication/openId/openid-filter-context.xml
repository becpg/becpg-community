<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>
<beans>
	<!-- NullFilter used for this bean, as we are using the more widely-scoped 
		globalAuthenticationFilter -->
	<bean id="authenticationFilter" class="org.alfresco.repo.web.filter.beans.NullFilter">
		<property name="active">
			<value>${openid.authentication.sso.enabled}</value>
		</property>
	</bean>

	<bean id="openIdConsumer"
		class="fr.becpg.repo.security.authentication.openid.OpenID4JavaConsumer">
		<constructor-arg index="0">
			<list>
				<bean class="org.springframework.security.openid.OpenIDAttribute">
					<constructor-arg index="0" value="email" />
					<constructor-arg index="1"
						value="http://schema.openid.net/contact/email" />
					<property name="required" value="true" />
				</bean>
				<bean class="org.springframework.security.openid.OpenIDAttribute">
					<constructor-arg index="0" value="firstName" />
					<constructor-arg index="1"
						value="http://axschema.org/namePerson/first" />
					<property name="required" value="true" />
				</bean>
				<bean class="org.springframework.security.openid.OpenIDAttribute">
					<constructor-arg index="0" value="lastName" />
					<constructor-arg index="1"
						value="http://axschema.org/namePerson/last" />
					<property name="required" value="true" />
				</bean>
			</list>
		</constructor-arg>
		<property name="sysAdminParams" ref="sysAdminParams" />
		<property name="oauthScopes" value="${openid.authentication.oauthScopes}" />
		<property name="consumerKey" value="${oauth.consumer.key}"/>
		<property name="is2LeggedOauth" value="${oauth.is2Legged}"/>
	</bean>
	<!-- <bean id="RemoteUserMapper" class="org.alfresco.web.app.servlet.DefaultRemoteUserMapper"> 
		<property name="active"> <value>${openid.authentication.sso.enabled}</value> 
		</property> <property name="personService"> <ref bean="PersonService" /> 
		</property> </bean> -->

	<bean id="globalAuthenticationFilter" class="fr.becpg.web.app.servlet.OpenIdAuthenticationFilter">
		<property name="active">
			<value>${openid.authentication.sso.enabled}</value>
		</property>
		<property name="authenticationService">
			<ref bean="AuthenticationService" />
		</property>
		<property name="authenticationComponent">
			<ref bean="AuthenticationComponent" />
		</property>
		<property name="personService">
			<ref bean="personService" />
		</property>
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
		<property name="transactionService">
			<ref bean="TransactionService" />
		</property>
		<property name="claimedIdentity">
			<value>${openid.authentication.server}</value>
		</property>
		<property name="consumer" ref="openIdConsumer" />
		<property name="configService">
			<ref bean="webClientConfigService" />
		</property>
		<property name="sysAdminParams">
			<ref bean="sysAdminParams" />
		</property>
		<property name="oauthCertFile" value="${oauth.cert.path}" />
		<property name="oauthConsumerKey" value="${oauth.consumer.key}" />
		<property name="oauthConsumerKeySecret" value="${oauth.consumer.secret}" />
	</bean>


	<!-- Enable cookie-based handling of webscript logins. We must assume cookie 
		based client authentication when external auth is in the chain. -->
	<bean id="webscriptAuthenticationFilter"
		class="org.alfresco.web.app.servlet.WebScriptSSOAuthenticationFilter">
		<property name="active">
			<value>${openid.authentication.sso.enabled}</value>
		</property>
		<property name="authenticationService">
			<ref bean="AuthenticationService" />
		</property>
		<property name="authenticationComponent">
			<ref bean="AuthenticationComponent" />
		</property>
		<property name="personService">
			<ref bean="personService" />
		</property>
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
		<property name="transactionService">
			<ref bean="TransactionService" />
		</property>
		<property name="container">
			<ref bean="webscripts.container" />
		</property>
	</bean>

</beans>