<alfresco-config>

   <plug-ins>
      <element-readers>
         <element-reader element-name="kerberos" class="org.alfresco.web.site.servlet.config.KerberosConfigElementReader"/>
         <element-reader element-name="header" class="org.alfresco.web.config.header.HeaderElementReader"/>
      </element-readers>
   </plug-ins>

   <!-- Global config section -->
   <config>
      <flags>
         <!--
            Developer debugging setting to turn on DEBUG mode for client scripts in the browser
         -->
         <client-debug>false</client-debug>
         <!--
            LOGGING can always be toggled at runtime when in DEBUG mode (Ctrl, Ctrl, Shift, Shift).
            This flag automatically activates logging on page load.
         -->
         <client-debug-autologging>false</client-debug-autologging>
      </flags>
      
      <header>
         <app-items>
            <!-- defaults: icon="{id}.png" label="header.{id}.label" description="header.{id}.description" -->
            <item type="link" id="my-dashboard">{userdashboardpage}</item>
            <item type="js" id="sites">Alfresco.module.Sites</item>
            <item type="link" id="people">/people-finder</item>
            <item type="link" id="repository">/repository</item>
            <item type="container" id="more">
               <container-group id="my">
                  <item type="link" id="my-tasks">/my-tasks</item>
                  <item type="link" id="my-workflows">/my-workflows</item>
                  <item type="link" id="my-content">/user/user-content</item>
                  <item type="link" id="my-sites">/user/user-sites</item>
                  <item type="link" id="my-profile">{userprofilepage}</item>
                   <item type="link" id="npd-list">/npd-list</item>
                  <item type="js" id="saved-searches" condition="false">Alfresco.module.SavedSearches</item>
               </container-group>
               <container-group id="tools" permission="admin">
                  <item type="link" id="application">/console/admin-console/application</item>
                  <item type="link" id="groups">/console/admin-console/groups</item>
                  <item type="link" id="replication-jobs">/console/admin-console/replication-jobs</item>
                  <item type="link" id="repository">/console/admin-console/repository</item>
                  <item type="link" id="users">/console/admin-console/users</item>
                 
                  <item type="link" id="becpg-admin">/console/admin-console/becpg-admin</item>
               </container-group>
            </item>
         </app-items>
         <user-items>
            <item type="container" id="user" icon="" description="">
               <container-group id="usermenu" label="">
                  <item type="user" id="status">{userprofilepage}</item>
                  <item type="link" id="my-profile">{userprofilepage}</item>
                  <item type="link" id="change-password" condition="!context.externalAuthentication">/user/change-password</item>
                  <item type="external-link" id="help">{share-help}</item>
                  <item type="link" id="logout" condition="!context.externalAuthentication">/dologout</item>
               </container-group>
            </item>
            <item type="external-link" id="help" icon="">{share-help}</item>
         </user-items>
         <dependencies>
            <css src="/modules/create-site.css" />
            <css src="/modules/header/sites.css" />
            <js src="/modules/create-site.js" />
            <js src="/modules/header/sites.js" />
         </dependencies>
      </header>
   </config>

   <config evaluator="string-compare" condition="UriTemplate">
      <!-- list of URI based page Id templates used by Share -->
      <!-- when pages are requested from the framework, matches are attempted
           against each uri-template, and the token values returned if matched -->
      <uri-templates>
         <uri-template id="sitedashboardpage">/site/{site}/dashboard</uri-template>
         <uri-template id="sitepage">/site/{site}/{pageid}</uri-template>
         <uri-template id="userdashboardpage">/user/{userid}/dashboard</uri-template>
         <uri-template id="userpage">/user/{userid}/{pageid}</uri-template>
         <uri-template id="userprofilepage">/user/{userid}/profile</uri-template>
         <uri-template id="userdefaultpage">/user/{pageid}</uri-template>
         <uri-template id="consoletoolpage">/console/{pageid}/{toolid}</uri-template>
         <uri-template id="consolepage">/console/{pageid}</uri-template>
      </uri-templates>
   </config>

   <config evaluator="string-compare" condition="SitePages">
      <pages>
         <page id="calendar">calendar</page>
         <page id="wiki-page">wiki-page?title=Main_Page</page>
         <page id="documentlibrary">documentlibrary</page>
         <page id="discussions-topiclist">discussions-topiclist</page>
         <page id="blog-postlist">blog-postlist</page>
         <page id="links">links</page>
         <page id="data-lists">data-lists</page>
      </pages>
   </config>

   <config evaluator="string-compare" condition="Users">
      <users>
         <!-- minimum length for username and password -->
         <username-min-length>2</username-min-length>
         <password-min-length>3</password-min-length>
      </users>
   </config>

   <config evaluator="string-compare" condition="DocumentDetails">
      <document-details>
         <!-- display web previewer on document details page -->
         <display-web-preview>true</display-web-preview>
      </document-details>
   </config>
   
   <config evaluator="string-compare" condition="Search">
      <search>
         <!-- default minimum length for search terms -->
         <min-search-term-length>1</min-search-term-length>
         
         <!-- default maximum number of results for a search -->
         <max-search-results>250</max-search-results>
         
         <!-- Repository search configuration option -->
         <!-- 
              The 'repository-search' config element value can be one of:
              none - disable repository wide search option
              context - search depending on current context, including repository, all sites, current site (default)
              always - always search full repository no matter what the context, disables search context options
         -->
         <repository-search>context</repository-search>
      </search>
      
      <!-- sorting fields and labels -->
      <!--
         The 'sort' config element contains the name of the content model field
         to sort against and can be of the form:
          . Short QName string e.g. "cm:name"
          . Pseudo cm:content field starting with a "." e.g. ".size"
          . Any other valid sortable fts-alfresco special field e.g. "TYPE"
         The field can be optionally followed by |true or |false to indicate sort direction
         
         The element supports the following optional attributes:
            label = label text to display
            labelId = I18N message id of label text to display
      -->
      <sorting>
         <sort labelId="search.sort.relevance"></sort>
         <sort labelId="label.name">cm:name</sort>
         <sort labelId="label.title">cm:title</sort>
         <sort labelId="label.description">cm:description</sort>
         <sort labelId="label.author">cm:author</sort>
         <sort labelId="label.modifier">cm:modifier</sort>
         <sort labelId="label.modified">cm:modified|false</sort>
         <sort labelId="label.creator">cm:creator</sort>
         <sort labelId="label.created">cm:created|false</sort>
         <sort labelId="search.sort.size">.size|true</sort>
         <sort labelId="search.sort.mimetype">.mimetype</sort>
         <sort labelId="search.sort.type">TYPE</sort>
      </sorting>
   </config>
   
   <config evaluator="string-compare" condition="AdvancedSearch">
      <advanced-search>
         <!-- Forms for the advanced search type list -->
         <forms>
            <!--
               The 'form' config element contains the name of the model type
               of the form to display.
               
               The element supports the following optional attributes:
                  id = form id, the id of "search" will be assumed if not set
                  label = label text to display - defaults to model type if not set
                  labelId = I18N message id of label text to display
                  description = description text to display
                  descriptionId = I18N message id of description text to display
            -->
            <form labelId="search.form.label.cm_content" descriptionId="search.form.desc.cm_content">cm:content</form>
            <form labelId="search.form.label.cm_folder" descriptionId="search.form.desc.cm_folder">cm:folder</form>
         </forms>
      </advanced-search>
   </config>

   <config evaluator="string-compare" condition="Replication">
      <share-urls>
         <!--
            To discover a Repository Id, browse to the remote server's CMIS landing page at:
              http://{server}:{port}/alfresco/service/cmis/index.html
            The Repository Id field is found under the "CMIS Repository Information" expandable panel.

            Example config entry:
              <share-url repositoryId="622f9533-2a1e-48fe-af4e-ee9e41667ea4">http://new-york-office/share/</share-url>
         -->
      </share-urls>
   </config>

   <!-- Document Library config section -->
   <config evaluator="string-compare" condition="DocumentLibrary">

      <tree>
         <!--
            Whether the folder Tree component should enumerate child folders or not.
            This is a relatively expensive operation, so should be set to "false" for Repositories with broad folder structures.
         -->
         <evaluate-child-folders>true</evaluate-child-folders>
         
         <!--
            Optionally limit the number of folders shown in treeview throughout Share.
         -->
         <maximum-folder-count>-1</maximum-folder-count>
      </tree>

      <!--
         Used by the "Manage Aspects" action and Rules pages

         For custom aspects, remember to also add the relevant i18n string(s)
            aspect.cm_myaspect=My Aspect
      -->
      <aspects>

         <!--
            Aspects that a user can see in UI.
            Used by Rules, aspects are the listed aspects for rule's "has-aspect" action condition.
         -->
         <visible>
            <aspect name="cm:generalclassifiable" />
            <aspect name="cm:complianceable" />
            <aspect name="cm:dublincore" />
            <aspect name="cm:effectivity" />
            <aspect name="cm:summarizable" />
            <aspect name="cm:versionable" />
            <aspect name="cm:templatable" />
            <aspect name="cm:emailed" />
            <aspect name="emailserver:aliasable" />
            <aspect name="cm:taggable" />
            <aspect name="app:inlineeditable" />
            <aspect name="gd:googleEditable" />
            <aspect name="cm:geographic" />
            <aspect name="exif:exif" />
         </visible>

         <!--
            Aspects that a user can add in UI.
            Used by Rules, aspects are the listed aspects for rule's "add-features" action.
            Same as "visible" if left empty.
         -->
         <addable>
         </addable>

         <!--
            Aspects that a user can remove in UI.
            Used by Rules, aspects are the listed aspects for rule's "remove-features" action.
            Same as "visible" if left empty
         -->
         <removeable>
         </removeable>
      </aspects>

      <!--
         Used by the "Change Type" action.
         Used by Rules:
          - parent types are the listed types for rule's "is-subtype" action condition
          - sub types are the listed types for rule's "specialise-type" action

         Define valid subtypes using the following example:
            <type name="cm:content">
               <subtype name="cm:mysubtype" />
            </type>

         Remember to also add the relevant i18n string(s):
            type.cm_mysubtype=My SubType
      -->
      <types>
         <type name="cm:content">
         </type>

         <type name="cm:folder">
         </type>
      </types>

      <!--
         If set, will present a WebDAV link for the current item on the Document and Folder details pages.
         Also used to generate the "View in Alfresco Explorer" action for folders.
      -->
      <!--
      <repository-url>http://localhost:8080/alfresco</repository-url>
      -->
      
      <!--
         Google Docs™ integration
      -->
      <google-docs>
         <!--
            Enable/disable the Google Docs UI integration (Extra types on Create Content menu, Google Docs actions).
         -->
         <enabled>false</enabled>
         
         <!--
            The mimetypes of documents Google Docs allows you to create via the Share interface.
            The I18N label is created from the "type" attribute, e.g. google-docs.doc=Google Docs&trade; Document
         -->
         <creatable-types>
            <creatable type="doc">application/msword</creatable>
            <creatable type="xls">application/vnd.ms-excel</creatable>
            <creatable type="ppt">application/vnd.ms-powerpoint</creatable>
         </creatable-types>
      </google-docs>
      
      <!--
         File upload configuration
      -->
      <file-upload>
         <!--
            Adobe Flash™
            In certain environments, an HTTP request originating from Flash cannot be authenticated using an existing session.
            See: http://bugs.adobe.com/jira/browse/FP-4830
            For these cases, it is useful to disable the Flash-based uploader for Share Document Libraries.
         -->
         <adobe-flash-enabled>true</adobe-flash-enabled>
      </file-upload>
   </config>

   <!-- Repository Library config section -->
   <config evaluator="string-compare" condition="RepositoryLibrary">
      <!--
         Root nodeRef for top-level folder.
      -->
      <root-node>alfresco://company/home</root-node>

      <tree>
         <!--
            Whether the folder Tree component should enumerate child folders or not.
            This is a relatively expensive operation, so should be set to "false" for Repositories with broad folder structures.
         -->
         <evaluate-child-folders>false</evaluate-child-folders>

         <!--
            Optionally limit the number of folders shown in treeview throughout Share.
         -->
         <maximum-folder-count>500</maximum-folder-count>
      </tree>
   </config>

   <!-- Workflow config section -->
   <config evaluator="string-compare" condition="Workflow">
      <!-- A list of workflow definitions that are NOT displayed in Share -->
      <hidden-workflows>
         <!-- Hide all WCM related workflows -->
         <workflow name="jbpm$wcmwf:*"/>
         <workflow name="jbpm$wf:articleapproval"/>
         <workflow name="jbpm$inwf:invitation-nominated"/>
         <workflow name="jbpm$imwf:invitation-moderated"/>
      </hidden-workflows>

      <!-- A list of workflow tasks that are NOT displayed in Share  -->
      <hidden-tasks>
         <!-- Hide all WCM related tasks -->
         <task type="wcmwf:*"/>
      </hidden-tasks>
   </config>

</alfresco-config>
