<?xml version='1.0' encoding='UTF-8'?>
<!--
  Copyright (C) 2010-2025 beCPG. 
   
  This file is part of beCPG 
   
  beCPG is free software: you can redistribute it and/or modify 
  it under the terms of the GNU Lesser General Public License as published by 
  the Free Software Foundation, either version 3 of the License, or 
  (at your option) any later version. 
   
  beCPG is distributed in the hope that it will be useful, 
  but WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
  GNU Lesser General Public License for more details. 
   
  You should have received a copy of the GNU Lesser General Public License along with beCPG. If not, see <http://www.gnu.org/licenses/>.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan base-package="fr.becpg" />

	<!-- beCPG configuration files -->
	<bean name="beCPGPlaceholderConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="true"></property>
		<property name="locations">
			<list>
				<value>classpath:alfresco/module/${pom.artifactId}/becpg-config-core.properties</value>
				<value>classpath*:beCPG.properties</value>
			</list>
		</property>
	</bean>

	<bean id="jsonVersionExtractor" class="fr.becpg.repo.entity.datalist.impl.JSONVersionExtractor" init-method="init">
		<property name="dataListExtractorFactory" ref="dataListExtractorFactory" />
		<property name="attributeExtractorService" ref="attributeExtractorService" />
		<property name="paginatedSearchCache" ref="paginatedSearchCache" />
		<property name="entityDictionaryService" ref="entityDictionaryService" />
		<property name="nodeService" ref="nodeService" />
		<property name="defaultExtractor" value="false" />
		<property name="advSearchService" ref="AdvSearchService" />
		<property name="services" ref="ServiceRegistry" />
		<property name="permissionService" ref="permissionService" />
		<property name="ratingService" ref="ratingService" />
		<property name="priority" value="1" />
	</bean>

	<bean id="becpgCoreBootstrapMessages" class="org.alfresco.i18n.ResourceBundleBootstrapComponent">
		<property name="resourceBundles">
			<list>
				<value>alfresco/module/${pom.artifactId}/model/becpgModel</value>
				<value>alfresco/module/${pom.artifactId}/messages/paths</value>
				<value>alfresco/module/${pom.artifactId}/messages/becpg-messages</value>
				<value>alfresco/module/${pom.artifactId}/messages/groups</value>
				<value>alfresco/module/${pom.artifactId}/messages/demo</value>
				<value>alfresco/module/${pom.artifactId}/messages/patch</value>
				<value>alfresco/module/${pom.artifactId}/messages/batches</value>
			</list>
		</property>
	</bean>

	<!-- cached dictionary -->

	<bean id="entityDictionaryService" class="fr.becpg.repo.entity.impl.EntityDictionaryServiceImpl" parent="dictionaryService"
		depends-on="bcpg.dictionaryBootstrap">
		<property name="beCPGCacheService" ref="beCPGCacheService" />
		<property name="registry" ref="asynchronouslyRefreshedCacheRegistry" />
		<property name="repositoryEntityDefReader" ref="repositoryEntityDefReader" />
		<property name="namespaceService" ref="namespaceService" />
		<property name="messageService" ref="messageService" />
	</bean>

	<alias alias="cachedDictionaryService" name="entityDictionaryService"></alias>
    
    
    
	<!-- Helper -->
	<bean id="contentHelper" class="fr.becpg.repo.helper.ContentHelper">
		<property name="contentService" ref="contentService" />
		<property name="mimetypeService" ref="mimetypeService" />
		<property name="nodeService" ref="nodeService" />
	</bean>


	<bean id="associationService" parent="abstractBeCPGPolicy" class="fr.becpg.repo.helper.impl.AssociationServiceImplV2">
		<property name="entityDictionaryService" ref="entityDictionaryService" />
		<property name="namespaceService" ref="namespaceService" />
		<property name="tenantService" ref="tenantService" />
		<property name="dataSource" ref="dataSource" />
		<property name="qnameDAO" ref="qnameDAO" />
		<!-- Caches -->
		<property name="childsAssocsCache" ref="becpgChildAssocsCache" />
		<property name="assocsCache" ref="becpgAssocsCache" />
		<property name="registry" ref="asynchronouslyRefreshedCacheRegistry" />
		<property name="sqlSessionTemplate" ref="repoSqlSessionTemplate"/>
		<property name="permissionService" ref="permissionService"/>
		<property name="nodeDAO" ref="nodeDAO"/>
	</bean>


	<!-- Mail service -->

	<bean id="beCPGMailService" class="fr.becpg.repo.mail.impl.BeCPGMailServiceImpl">
		<property name="nodeService" ref="nodeService" />
		<property name="serviceRegistry" ref="ServiceRegistry" />
		<property name="searchService" ref="searchService" />
		<property name="repository" ref="repositoryHelper" />
		<property name="fileFolderService" ref="fileFolderService" />
		<property name="namespaceService" ref="namespaceService" />
		<property name="actionService" ref="ActionService" />
		<property name="personService" ref="personService" />
		<property name="sysAdminParams" ref="sysAdminParams" />
		<property name="mailFrom" value="${mail.from.default}" />
	</bean>


	
	<!-- Public API -->

	<alias name="remoteEntityService" alias="RemoteEntityService" />

	<!-- DataLists -->

	<bean id="dataListExtractorFactory" class="fr.becpg.repo.entity.datalist.impl.DataListExtractorFactoryImpl" />



	<bean id="abstractDataListExtractor" abstract="true" init-method="init" class="fr.becpg.repo.entity.datalist.impl.AbstractDataListExtractor">
		<property name="advSearchService" ref="AdvSearchService" />
		<property name="nodeService" ref="nodeService" />
		<property name="services" ref="ServiceRegistry" />
		<property name="attributeExtractorService" ref="attributeExtractorService" />
		<property name="dataListExtractorFactory" ref="dataListExtractorFactory" />
		<property name="permissionService" ref="permissionService" />
		<property name="entityDictionaryService" ref="entityDictionaryService" />
		<property name="ratingService" ref="ratingService" />
		<property name="beCPGLicenseManager" ref="becpgLicenseManager" />
	</bean>

	<bean id="simpleExtractor" class="fr.becpg.repo.entity.datalist.impl.SimpleExtractor" parent="abstractDataListExtractor">
		<property name="entityListDAO" ref="entityListDAO" />
		<property name="dataListSortRegistry" ref="dataListSortRegistry" />
		<property name="associationService" ref="associationService" />
		<property name="paginatedSearchCache" ref="paginatedSearchCache" />
		<property name="defaultExtractor" value="true" />
	</bean>

	<bean id="smartContentExtractor" class="fr.becpg.repo.entity.datalist.impl.SmartContentExtractor" parent="simpleExtractor">
		<property name="defaultExtractor" value="false" />
		<property name="alfrescoRepository" ref="alfrescoRepository" />
		<property name="expressionService" ref="expressionService" />
	</bean>

	<bean id="multiLevelExtractor" class="fr.becpg.repo.entity.datalist.impl.MultiLevelExtractor" parent="simpleExtractor">
		<property name="multiLevelDataListService" ref="multiLevelDataListService" />
		<property name="preferenceService" ref="preferenceService" />
		<property name="defaultExtractor" value="false" />
	</bean>

	<bean id="wUsedExtractor" class="fr.becpg.repo.entity.datalist.impl.WUsedExtractor" parent="multiLevelExtractor">
		<property name="wUsedListService" ref="wUsedListService" />
		<property name="namespaceService" ref="namespaceService" />
		<property name="nestedAdvSearchPlugin" ref="nestedAdvSearchPlugin" />
	</bean>

	<bean id="multiListExtractor" class="fr.becpg.repo.entity.datalist.impl.MultiListExtractor" parent="simpleExtractor">
		<property name="namespaceService" ref="namespaceService" />
		<property name="defaultExtractor" value="false" />
	</bean>


	<bean id="bulkEditExtractor" class="fr.becpg.repo.entity.datalist.impl.BulkEditExtractor" parent="simpleExtractor">
		<property name="defaultExtractor" value="false" />
		<property name="namespaceService" ref="namespaceService" />
	</bean>
	

	<!-- Public API -->

	<alias name="advSearchService" alias="AdvSearchService" />



	<bean id="applicationContextHelper" class="fr.becpg.util.ApplicationContextHelper" />

    
    <!-- Alfresco patch for country support under MLText -->
	<bean id="mlPropertyInterceptor" class="fr.becpg.repo.multilingual.BeCPGMLPropertyInterceptor" depends-on="systemConfigurationRegistry">
		<property name="nodeService">
			<ref bean="mlAwareNodeService" />
		</property>
		<property name="multilingualContentService">
			<ref bean="multilingualContentService" />
		</property>
		<property name="dictionaryService">
			<ref bean="cachedDictionaryService" />
		</property>
		<property name="namespaceService" ref="namespaceService" />
	</bean>



<!--  NotificationRule Job -->

	<bean id="notificationRuleJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
			<value>fr.becpg.repo.notification.NotificationRuleJob</value>
		</property>
		<property name="group" value="beCPG" />
		<property name="description" value="Run notification rules" />
		<property name="jobDataAsMap">
			<map>
				<entry key="notificationRuleService">
					<ref bean="notificationRuleService" />
				</entry>
				<entry key="tenantAdminService">
					<ref bean="tenantAdminService" />
				</entry>
				<entry key="transactionService">
					<ref bean="transactionService" />
				</entry>
				<entry key="jobLockService">
					<ref bean="jobLockService" />
				</entry>
			</map>
		</property>
	</bean>


	<bean id="notificationRuleSchedulerAccessor" class="org.alfresco.schedule.AlfrescoSchedulerAccessorBean">
		<property name="scheduler" ref="schedulerFactory" />
		<property name="triggers">
			<list>
				<bean id="notificationRuleJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
					<property name="jobDetail">
						<ref bean="notificationRuleJob" />
					</property>
					<property name="cronExpression">
						<value>${beCPG.notification.notify.cronExpression}</value>
					</property>
				</bean>
			</list>
		</property>
		<property name="enabled" value="${beCPG.notification.notify.enabled}" />
	</bean>
    
    
  	<!--  Overload of IntegrityChecker -->
	<bean id="integrityChecker" class="fr.becpg.repo.node.integrity.BeCPGIntegrityChecker" init-method="init">
		<property name="policyComponent" ref="policyComponent" />
		<property name="dictionaryService" ref="cachedDictionaryService" />
		<property name="nodeService" ref="nodeService" />
		<property name="entityDictionaryService" ref="entityDictionaryService" />
		<property name="entityListDAO" ref="entityListDAO" />
		<property name="attributeExtractorService" ref="attributeExtractorService" />
		<property name="tenantService" ref="tenantService" />
		<property name="enabled" value="${system.integrity.enabled}" />
		<property name="traceOn" value="${system.integrity.trace}" />
		<property name="failOnViolation" value="${system.integrity.failOnViolation}" />
		<property name="maxErrorsPerTransaction" value="5" />
		<property name="storesToIgnore">
			<list>
				<value>${version.store.version2Store}</value>
			</list>
		</property>
	</bean> 

    <!-- Ovverride alfresco copy service -->
	<bean id="copyService" class="fr.becpg.repo.copy.BecpgCopyServiceImpl" parent="abstractBaseCopyService" init-method="init">
		<property name="cannedQueryRegistry" ref="copyServiceCannedQueryRegistry" />
		<property name="dictionaryService" ref="cachedDictionaryService" />
		<property name="systemConfigurationService" ref="systemConfigurationService" />
		<property name="nodeService" ref="NodeService" />
		<property name="policyComponent" ref="policyComponent" />
		<property name="behaviourFilter" ref="policyBehaviourFilter" />
		<property name="ruleService" ref="ruleService" />
		<property name="permissionService" ref="permissionService" />
		<property name="publicServiceAccessService" ref="publicServiceAccessService" />
		<property name="internalNodeService" ref="mlAwareNodeService" />
		<property name="contentPropertyRestrictionInterceptor" ref="contentPropertyRestrictionInterceptor" />
	</bean>
    
    <!-- Ovveride alfresco rule service -->

	<bean id="ruleService" class="org.alfresco.repo.rule.RuleServiceImpl" init-method="init">
		<property name="nodeService" ref="NodeService" />
		<property name="runtimeNodeService" ref="nodeService" />
		<property name="copyService" ref="copyService" />
		<property name="actionService" ref="ActionService" />
		<property name="runtimeActionService" ref="actionService" />
		<property name="dictionaryService" ref="cachedDictionaryService" />
		<property name="policyComponent" ref="policyComponent" />
		<property name="permissionService" ref="permissionService" />
		<property name="nodeRulesCache" ref="nodeRulesCache" />
		<property name="rulesDisabled">
			<value>false</value>
		</property>
	</bean>

 <!--  Site role precedence - higher number - more important role -->
	<bean id="siteRoleComparator" class="org.alfresco.repo.site.RoleComparatorImpl" init-method="init">
		<property name="rolePrecedence">
			<map>
				<entry key="SiteManager" value="6" />
				<entry key="SiteCollaborator" value="5" />
				<entry key="SiteContributor" value="4" />
				<entry key="SiteBranchOnlyManager" value="3" />
				<entry key="SiteBranchManager" value="2" />
				<entry key="SiteConsumer" value="1" />
			</map>
		</property>
	</bean>

	<bean id="versionCleanerJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
			<value>fr.becpg.repo.entity.version.VersionCleanerJob</value>
		</property>
		<property name="group" value="beCPG" />
		<property name="description" value="Run version cleanup" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobLockService">
					<ref bean="jobLockService" />
				</entry>
				<entry key="versionCleanerService">
					<ref bean="versionCleanerService" />
				</entry>
				<entry key="systemConfigurationService">
					<ref bean="systemConfigurationService" />
				</entry>
			</map>
		</property>
	</bean>
	
	<bean id="entityReportJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
			<value>fr.becpg.repo.report.entity.EntityReportJob</value>
		</property>
		<property name="group" value="beCPG" />
		<property name="description" value="Run pending reports generation" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobLockService">
					<ref bean="jobLockService" />
				</entry>
				<entry key="nodeService">
					<ref bean="nodeService" />
				</entry>
				<entry key="entityVersionService">
					<ref bean="entityVersionService" />
				</entry>
				<entry key="entityReportService">
					<ref bean="entityReportService" />
				</entry>
				<entry key="batchQueueService">
					<ref bean="batchQueueService" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="versionCleanerSchedulerAccessor" class="org.alfresco.schedule.AlfrescoSchedulerAccessorBean">
		<property name="scheduler" ref="schedulerFactory" />
		<property name="triggers">
			<list>
				<bean id="versionCleanerJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
					<property name="jobDetail" ref="versionCleanerJob" />
					<property name="cronExpression" value="${beCPG.version.cleaner.cronExpression}" />
				</bean>
			</list>
		</property>
		<property name="enabled" value="${beCPG.version.cleaner.enabled}" />
	</bean>
	
	<bean id="entityReportSchedulerAccessor" class="org.alfresco.schedule.AlfrescoSchedulerAccessorBean">
		<property name="scheduler" ref="schedulerFactory" />
		<property name="triggers">
			<list>
				<bean id="entityReportJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
					<property name="jobDetail" ref="entityReportJob" />
					<property name="cronExpression" value="${beCPG.report.job.cronExpression}" />
				</bean>
			</list>
		</property>
		<property name="enabled" value="${beCPG.report.job.enabled}" />
	</bean>

	<bean id="batchThreadPoolExecutor0" class="org.alfresco.util.ThreadPoolExecutorFactoryBean">
		<property name="poolName" value="beCPGBatchThreadPoolExecutor0" />
		<property name="corePoolSize" value="1" />
		<property name="maximumPoolSize" value="1" />
		<property name="threadPriority" value="4" />
	</bean>

	<bean id="batchThreadPoolExecutor1" class="org.alfresco.util.ThreadPoolExecutorFactoryBean">
		<property name="poolName" value="beCPGBatchThreadPoolExecutor0" />
		<property name="corePoolSize" value="1" />
		<property name="maximumPoolSize" value="1" />
		<property name="threadPriority" value="4" />
	</bean>

	<bean id="batchThreadPoolExecutor2" class="org.alfresco.util.ThreadPoolExecutorFactoryBean">
		<property name="poolName" value="beCPGBatchThreadPoolExecutor0" />
		<property name="corePoolSize" value="1" />
		<property name="maximumPoolSize" value="1" />
		<property name="threadPriority" value="4" />
	</bean>

	<bean id="batchThreadPoolExecutor3" class="org.alfresco.util.ThreadPoolExecutorFactoryBean">
		<property name="poolName" value="beCPGBatchThreadPoolExecutor0" />
		<property name="corePoolSize" value="1" />
		<property name="maximumPoolSize" value="1" />
		<property name="threadPriority" value="4" />
	</bean>

	<bean id="batchThreadPoolExecutor4" class="org.alfresco.util.ThreadPoolExecutorFactoryBean">
		<property name="poolName" value="beCPGBatchThreadPoolExecutor0" />
		<property name="corePoolSize" value="1" />
		<property name="maximumPoolSize" value="1" />
		<property name="threadPriority" value="4" />
	</bean>

	<bean id="batchThreadPoolExecutorMap" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="0" value-ref="batchThreadPoolExecutor0" />
				<entry key="1" value-ref="batchThreadPoolExecutor1" />
				<entry key="2" value-ref="batchThreadPoolExecutor2" />
				<entry key="3" value-ref="batchThreadPoolExecutor3" />
				<entry key="4" value-ref="batchThreadPoolExecutor4" />
			</map>
		</constructor-arg>
	</bean>

	<bean id="repositoryNodeService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetName">
			<value>mlAwareNodeService</value>
		</property>
		<property name="proxyInterfaces">
			<list>
				<value>org.alfresco.service.cmr.repository.NodeService</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>nodeRefPropertyInterceptor</value>
			</list>
		</property>
	</bean>

	<bean name="auditModel.extractor.stringExtractor" class="fr.becpg.repo.audit.extractor.StringExtractor">
		<property name="registry" ref="auditModel.extractorRegistry" />
	</bean>
    
    
    <!-- Bootstrap -->
	<bean id="multiTenantWorkflowBootstrap" class="fr.becpg.repo.bootstrap.MultiTenantWorkflowBootstrap">
		<property name="transactionService" ref="transactionService" />
		<property name="tenantAdminService" ref="tenantAdminService" />
		<property name="workflowService" ref="WorkflowService" />
	</bean>
    
    <!-- Search -->
    <bean id="facet.dateFacetFields" class="org.springframework.beans.factory.config.SetFactoryBean">
      <property name="sourceSet">
         <set>
            <value>@{http://www.alfresco.org/model/content/1.0}created</value>
            <value>@{http://www.alfresco.org/model/content/1.0}modified</value>
            <!-- beCPG -->
            <value>@{http://www.alfresco.org/model/content/1.0}from</value>
            <value>@{http://www.alfresco.org/model/content/1.0}to</value>
         </set>
      </property>   
   </bean>
   
    <!-- beCPG overwrite to add new date filter -->
   <bean id="facet.dateBuckets" class="org.springframework.beans.factory.config.MapFactoryBean">
      <property name="sourceMap">
               <map>
                  <!-- Bucket => yesterday TO today -->
                  <entry key="[NOW/DAY-1DAY TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.one-day.label" />
                  <!-- Bucket => Last week TO today -->
                  <entry key="[NOW/DAY-7DAYS TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.one-week.label" />
                  <!-- Bucket => Last 2 weeks TO today -->
                  <entry key="[NOW/DAY-14DAYS TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.two-weeks.label" />
                  <!--  Bucket => Last month TO today -->
                  <entry key="[NOW/DAY-1MONTH TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.one-month.label" />
                  <!--  Bucket => Last 3 months TO today -->
                  <entry key="[NOW/DAY-3MONTHS TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.three-months.label" />
                  <!--  Bucket => Last 6 months TO today -->
                  <entry key="[NOW/DAY-6MONTHS TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.six-months.label" />
                  <!--  Bucket => Last year TO today -->
                  <entry key="[NOW/DAY-1YEAR TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.one-year.label" />
                  <!--  Bucket => Last 2 years TO today -->
                  <entry key="[NOW/DAY-2YEARS TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.two-years.label" />
                  <!--  Bucket => Last 3 years TO today -->
                  <entry key="[NOW/DAY-3YEARS TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.three-years.label" />
                  <!--  Bucket => Last 6 years TO today -->
                  <entry key="[NOW/DAY-6YEARS TO NOW/DAY+1DAY]" value="becpg.faceted-search.date.six-years.label" />
                  <!--  Bucket => today TO next week -->
                  <entry key="[NOW/DAY+1DAY TO NOW/DAY+7DAYS]" value="becpg.faceted-search.date.next-one-week.label" />
                  <!--  Bucket => today TO next 2 weeks -->
                  <entry key="[NOW/DAY+1DAY TO NOW/DAY+14DAYS]" value="becpg.faceted-search.date.next-two-weeks.label" />
                  <!--  Bucket => today TO next month -->
                  <entry key="[NOW/DAY+1DAY TO NOW/DAY+1MONTH]" value="becpg.faceted-search.date.next-one-month.label" />
                  <!--  Bucket => today to next 3 months  -->
                  <entry key="[NOW/DAY+1DAY TO NOW/DAY+3MONTHS]" value="becpg.faceted-search.date.next-three-months.label" />
                  <!--  Bucket => today to next 6 months -->
                  <entry key="[NOW/DAY+1DAY TO NOW/DAY+6MONTHS]" value="becpg.faceted-search.date.next-six-months.label" />
                  <!--  Bucket => today to next year -->
                  <entry key="[NOW/DAY+1DAY TO NOW/DAY+1YEAR]" value="becpg.faceted-search.date.next-one-year.label" />
                  <!--  Bucket => today to next 2 years -->
                  <entry key="[NOW/DAY+1DAY TO NOW/DAY+2YEARS]" value="becpg.faceted-search.date.next-two-years.label" />
                  <!--  Bucket => today to next 3 years -->
                  <entry key="[NOW/DAY+1DAY TO NOW/DAY+3YEARS]" value="becpg.faceted-search.date.next-three-years.label" />
                  <!--  Bucket => today to next 6 years -->
                  <entry key="[NOW/DAY+1DAY TO NOW/DAY+6YEARS]" value="becpg.faceted-search.date.next-six-years.label" />
                  
               </map>
      </property>
   </bean>
   
     <!-- Override SOLR cron backup 
     
     
    <bean id="search.alfrescoCoreSolrBackupClient" class="org.alfresco.repo.search.impl.solr.SolrBackupClient" >
        <property name="jobLockService">
            <ref bean="jobLockService" />
        </property>
        <property name="remoteBackupLocation">
            <value>${solr.backup.alfresco.remoteBackupLocation}</value>
        </property>
        <property name="numberToKeep">
            <value>${solr.backup.alfresco.numberToKeep}</value>
        </property>
        <property name="core">
            <value>${beCPG.solr.alfresco.core}</value>
        </property>
        <property name="solrAdminClient">
            <ref bean="solrAdminClient" />
        </property>
        <property name="solrQueryHTTPClient">
            <ref bean="search.solrQueryHTTPCLient" />
        </property>
    </bean>
    
    
    <bean id="search.archiveCoreSolrBackupClient" class="org.alfresco.repo.search.impl.solr.SolrBackupClient" >
        <property name="jobLockService">
            <ref bean="jobLockService" />
        </property>
        <property name="remoteBackupLocation">
            <value>${solr.backup.archive.remoteBackupLocation}</value>
        </property>
         <property name="numberToKeep">
            <value>${solr.backup.archive.numberToKeep}</value>
        </property>
        <property name="core">
            <value>${beCPG.solr.archive.core}</value>
        </property>
        <property name="solrAdminClient">
            <ref bean="solrAdminClient" />
        </property>
        <property name="solrQueryHTTPClient">
            <ref bean="search.solrQueryHTTPCLient" />
        </property>
    </bean>
    
    -->

</beans>
