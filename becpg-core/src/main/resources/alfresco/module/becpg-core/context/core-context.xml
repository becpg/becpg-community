<?xml version='1.0' encoding='UTF-8'?>
<!--
  Copyright (C) 2010-2020 beCPG. 
   
  This file is part of beCPG 
   
  beCPG is free software: you can redistribute it and/or modify 
  it under the terms of the GNU Lesser General Public License as published by 
  the Free Software Foundation, either version 3 of the License, or 
  (at your option) any later version. 
   
  beCPG is distributed in the hope that it will be useful, 
  but WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
  GNU Lesser General Public License for more details. 
   
  You should have received a copy of the GNU Lesser General Public License along with beCPG. If not, see <http://www.gnu.org/licenses/>.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="fr.becpg" />

	<!-- beCPG configuration files -->
	<bean name="beCPGPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="true"></property>
		<property name="locations">
			<list>
				<value>classpath:alfresco/module/${pom.artifactId}/becpg-config-core.properties</value>
				<value>classpath*:beCPG.properties</value>	
			</list>
		</property>
	</bean>

	<bean id="becpgCoreBootstrapMessages" class="org.alfresco.i18n.ResourceBundleBootstrapComponent">
		<property name="resourceBundles">
			<list>
				<value>alfresco/module/${pom.artifactId}/model/becpgModel</value>
				<value>alfresco/module/${pom.artifactId}/messages/paths</value>
				<value>alfresco/module/${pom.artifactId}/messages/becpg-messages</value>
				<value>alfresco/module/${pom.artifactId}/messages/groups</value>
				<value>alfresco/module/${pom.artifactId}/messages/demo</value>
				<value>alfresco/module/${pom.artifactId}/messages/patch</value>
			</list>
		</property>
	</bean>

	<!-- Helper -->
	<bean id="contentHelper" class="fr.becpg.repo.helper.ContentHelper">
		<property name="contentService" ref="contentService" />
		<property name="mimetypeService" ref="mimetypeService" />
		<property name="nodeService" ref="nodeService" />
	</bean>
	

	<bean id="associationService"  parent="abstractBeCPGPolicy" class="fr.becpg.repo.helper.impl.AssociationServiceImpl">
		<property name="beCPGCacheService" ref="beCPGCacheService"/>
		<property name="entityDictionaryService" ref="entityDictionaryService"/>
		<property name="namespaceService" ref="namespaceService" />		
		<property name="tenantService" ref="tenantService" />	
		<property name="dataSource" ref="dataSource" />	
		<property name="qnameDAO" ref="qnameDAO" />		
	</bean>


	<!-- Mail service -->

	<bean id="beCPGMailService" class="fr.becpg.repo.mail.impl.BeCPGMailServiceImpl">
		<property name="nodeService" ref="nodeService" />
		<property name="serviceRegistry" ref="ServiceRegistry" />
		<property name="searchService" ref="searchService" />		
		<property name="repository" ref="repositoryHelper" />			
		<property name="fileFolderService" ref="fileFolderService" />
		<property name="namespaceService" ref="namespaceService" />			
		<property name="actionService" ref="ActionService"/>
		<property name="authorityService" ref="authorityService"/>
		<property name="personService" ref="personService"/>
		<property name="mailFrom" value="${mail.from.default}" />
	</bean>


	
	<!-- Public API -->

	<alias name="remoteEntityService" alias="RemoteEntityService"/>

	<!-- DataLists -->
	
	
	<bean id="dataListExtractorFactory"
		class="fr.becpg.repo.entity.datalist.impl.DataListExtractorFactoryImpl"/>
	

	
	<bean id="abstractDataListExtractor" abstract="true" init-method="init" class="fr.becpg.repo.entity.datalist.impl.AbstractDataListExtractor">
		<property name="advSearchService" ref="AdvSearchService" />
		<property name="nodeService" ref="nodeService" />
		<property name="services" ref="ServiceRegistry" />
		<property name="attributeExtractorService" ref="attributeExtractorService" />
		<property name="dataListExtractorFactory" ref="dataListExtractorFactory"/>
		<property name="permissionService" ref="permissionService" />
		<property name="entityDictionaryService" ref="entityDictionaryService"/>
		<property name="ratingService" ref="ratingService"/>
	</bean>

   <bean id="simpleExtractor" class="fr.becpg.repo.entity.datalist.impl.SimpleExtractor" parent="abstractDataListExtractor">
		<property name="entityListDAO" ref="entityListDAO"/>
		<property name="dataListSortRegistry" ref="dataListSortRegistry"/>		
		<property name="associationService" ref="associationService"/>
		<property name="paginatedSearchCache" ref="paginatedSearchCache"/>
		<property name="defaultExtractor" value="true"/>
	</bean>
	
	 <bean id="smartContentExtractor" class="fr.becpg.repo.entity.datalist.impl.SmartContentExtractor" parent="simpleExtractor">
	 	<property name="defaultExtractor" value="false"/>
	 </bean>

	<bean id="multiLevelExtractor" class="fr.becpg.repo.entity.datalist.impl.MultiLevelExtractor" parent="simpleExtractor">
		<property name="multiLevelDataListService" ref="multiLevelDataListService" />
		<property name="preferenceService" ref="preferenceService"/>
		<property name="defaultExtractor" value="false"/>
	</bean>

	<bean id="wUsedExtractor" class="fr.becpg.repo.entity.datalist.impl.WUsedExtractor" parent="multiLevelExtractor">
		<property name="wUsedListService" ref="wUsedListService" />
		<property name="namespaceService" ref="namespaceService" />
		<property name="nestedAdvSearchPlugin" ref="nestedAdvSearchPlugin"/>
	</bean>

	<bean id="multiListExtractor" class="fr.becpg.repo.entity.datalist.impl.MultiListExtractor" parent="simpleExtractor">
		<property name="namespaceService" ref="namespaceService" />
		<property name="defaultExtractor" value="false"/>
	</bean>


	<bean id="bulkEditExtractor" class="fr.becpg.repo.entity.datalist.impl.BulkEditExtractor" parent="simpleExtractor">
		<property name="defaultExtractor" value="false"/>
		<property name="namespaceService" ref="namespaceService" />
	</bean>
	

	<!-- Public API -->
	
	<alias name="advSearchService" alias="AdvSearchService"/>
	
	
	<!-- Cache -->

	<bean id="beCPGCacheService" class="fr.becpg.repo.cache.impl.BeCPGCacheServiceImpl">
		<property name="tenantAdminService" ref="tenantAdminService"/>
		<property name="disableAllCache" value="false"/>
		<!-- If cache size is not define -->
		<property name="maxCacheItems" value="100"/>
		<property name="cacheSizes">
		   <!-- Cache size is by tenant -->
			<map>
			  <entry key="fr.becpg.repo.security.SecurityService" value="50" />
			  <entry key="fr.becpg.repo.entity.version.EntityVersionService" value="10" />
			  <entry key="fr.becpg.repo.helper.AttributeExtractorService" value="100" />
			  <entry key="fr.becpg.repo.helper.AssociationService.childs" value="10000" />
			  <entry key="fr.becpg.repo.helper.AssociationService.assocs" value="200000" />
			  <entry key="fr.becpg.repo.entity.catalog.EntityCatalogService" value="5" />
			  <entry key="fr.becpg.repo.jscript.Thumbnail" value="20" />
			  <entry key="fr.becpg.repo.search.PaginatedSearchCache" value="300" />
			  <entry key="fr.becpg.repo.search.PaginatedSearchCache.multiLevel" value="300" />
			  <entry key="fr.becpg.repo.entity.datalist.MultiLevelDataListService" value="50" />
			  <entry key="fr.becpg.repo.entity.impl.EntityDictionaryServiceImpl" value="1000" />
			  <entry key="fr.becpg.repo.license.BeCPGLicenseManager" value="20" />
			</map>
		</property>
	</bean>
	
	
	<bean id="applicationContextHelper" class="fr.becpg.util.ApplicationContextHelper"/>

    
    <!-- Alfresco patch for country support under MLText -->
    
    <bean id="mlPropertyInterceptor" class="fr.becpg.repo.multilingual.BeCPGMLPropertyInterceptor">
      <property name="nodeService">
         <ref bean="mlAwareNodeService" />
      </property>
      <property name="multilingualContentService">
         <ref bean="multilingualContentService" />
      </property>
      <property name="dictionaryService">
         <ref bean="dictionaryService" />
      </property>
   </bean>


<!--  NotificationRule Job -->

    <bean id="notificationRuleJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass">
            <value>fr.becpg.repo.notification.NotificationRuleJob</value>
        </property>
        <property name="jobDataAsMap">
            <map>
                <entry key="notificationRuleService">
                    <ref bean="notificationRuleService" />
                </entry>
                <entry key="tenantAdminService">
                    <ref bean="tenantAdminService" />
                </entry>
                <entry key="transactionService">
                    <ref bean="transactionService" />
                </entry>
            </map>
        </property>
    </bean>
    
    
    <bean id="notificationRuleSchedulerAccessor" class="org.alfresco.schedule.AlfrescoSchedulerAccessorBean">
		<property name="scheduler" ref="schedulerFactory" />
		<property name="triggers">
			<list>
				<bean id="notificationRuleJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"  >
			        <property name="jobDetail">
			            <ref bean="notificationRuleJob"/>
			        </property>
			        <property name="cronExpression">
			            <value>${beCPG.notification.notify.cronExpression}</value>
			        </property>
			    </bean>
			</list>
		</property>
		<property name="enabled" value="${beCPG.notification.notify.enabled}" />
	</bean>
    
    
  	<!--  Overload of IntegrityChecker --> 
    <bean id="integrityChecker" class="fr.becpg.repo.node.integrity.BeCPGIntegrityChecker" init-method="init">
      <property name="policyComponent" ref="policyComponent"/>
      <property name="dictionaryService" ref="dictionaryService" />
      <property name="nodeService" ref="nodeService" />
      <property name="entityDictionaryService" ref="entityDictionaryService" />
      <property name="entityListDAO" ref="entityListDAO" />
      <property name="attributeExtractorService" ref="attributeExtractorService" />
      <property name="tenantService" ref="tenantService" />
      <property name="enabled" value="${system.integrity.enabled}" />
      <property name="traceOn" value="${system.integrity.trace}" />
      <property name="failOnViolation" value="${system.integrity.failOnViolation}" />
      <property name="maxErrorsPerTransaction" value="5" />
      <property name="storesToIgnore">
         <list>
            <value>${version.store.version2Store}</value>
         </list>
      </property>
   </bean> 
   
   <!-- Overload of SOLR search -->

   <bean id="search.TypeIndexFilter" class="org.alfresco.repo.search.TypeIndexFilter" parent="search.abstractIndexFilter">
        <property name="ignorePathsForSpecificTypes">
            <value>true</value>
        </property>
        <property name="typesForIgnoringPaths">
            <list>
                <value>{http://www.alfresco.org/model/content/1.0}person</value>
                <value>{http://www.alfresco.org/model/application/1.0}configurations</value>
                <value>{http://www.alfresco.org/model/content/1.0}authorityContainer</value>
                <value>{http://www.alfresco.org/model/content/1.0}authority</value>
                <value>{http://www.alfresco.org/model/content/1.0}systemfolder</value>
                <value>{http://www.alfresco.org/model/rule/1.0}rule</value>
            </list>
        </property>
   </bean>
    
   
    
</beans>
