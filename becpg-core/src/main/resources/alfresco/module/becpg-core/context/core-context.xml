<?xml version='1.0' encoding='UTF-8'?>
<!--
  Copyright (C) 2010-2021 beCPG. 
   
  This file is part of beCPG 
   
  beCPG is free software: you can redistribute it and/or modify 
  it under the terms of the GNU Lesser General Public License as published by 
  the Free Software Foundation, either version 3 of the License, or 
  (at your option) any later version. 
   
  beCPG is distributed in the hope that it will be useful, 
  but WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
  GNU Lesser General Public License for more details. 
   
  You should have received a copy of the GNU Lesser General Public License along with beCPG. If not, see <http://www.gnu.org/licenses/>.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="fr.becpg" />

	<!-- beCPG configuration files -->
	<bean name="beCPGPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="true"></property>
		<property name="locations">
			<list>
				<value>classpath:alfresco/module/${pom.artifactId}/becpg-config-core.properties</value>
				<value>classpath*:beCPG.properties</value>	
			</list>
		</property>
	</bean>

	<bean id="jsonVersionExtractor" class="fr.becpg.repo.entity.datalist.impl.JSONVersionExtractor" init-method="init">
		<property name="dataListExtractorFactory" ref="dataListExtractorFactory" />
		<property name="attributeExtractorService" ref="attributeExtractorService" />
		<property name="paginatedSearchCache" ref="paginatedSearchCache" />
		<property name="entityDictionaryService" ref="entityDictionaryService" />
		<property name="nodeService" ref="nodeService" />
		<property name="entityActivityService" ref="entityActivityService" />
		<property name="dictionaryService" ref="cachedDictionaryService" />
		<property name="securityService" ref="securityService" />
		<property name="defaultExtractor" value="false" />
		<property name="advSearchService" ref="AdvSearchService" />
		<property name="services" ref="ServiceRegistry" />
		<property name="permissionService" ref="permissionService" />
		<property name="ratingService" ref="ratingService"/>
		<property name="priority" value="1"/>
	</bean>

	<bean id="becpgCoreBootstrapMessages" class="org.alfresco.i18n.ResourceBundleBootstrapComponent">
		<property name="resourceBundles">
			<list>
				<value>alfresco/module/${pom.artifactId}/model/becpgModel</value>
				<value>alfresco/module/${pom.artifactId}/messages/paths</value>
				<value>alfresco/module/${pom.artifactId}/messages/becpg-messages</value>
				<value>alfresco/module/${pom.artifactId}/messages/groups</value>
				<value>alfresco/module/${pom.artifactId}/messages/demo</value>
				<value>alfresco/module/${pom.artifactId}/messages/patch</value>
			</list>
		</property>
	</bean>

	<!-- cached dictionary -->

    <bean id="entityDictionaryService" class="fr.becpg.repo.entity.impl.EntityDictionaryServiceImpl" parent="dictionaryService" depends-on="bcpg.dictionaryBootstrap" >   
        <property name="beCPGCacheService" ref="beCPGCacheService"/>
        <property name="registry" ref="asynchronouslyRefreshedCacheRegistry"/>
        <property name="repositoryEntityDefReader" ref="repositoryEntityDefReader"/> 
        <property name="namespaceService" ref="namespaceService" />	    
    </bean>
    
    <alias alias="cachedDictionaryService" name="entityDictionaryService"></alias>
    
    
    
	<!-- Helper -->
	<bean id="contentHelper" class="fr.becpg.repo.helper.ContentHelper">
		<property name="contentService" ref="contentService" />
		<property name="mimetypeService" ref="mimetypeService" />
		<property name="nodeService" ref="nodeService" />
	</bean>
	

	<bean id="associationService"  parent="abstractBeCPGPolicy" class="fr.becpg.repo.helper.impl.AssociationServiceImplV2">
		<property name="entityDictionaryService" ref="entityDictionaryService"/>
		<property name="namespaceService" ref="namespaceService" />		
		<property name="tenantService" ref="tenantService" />	
		<property name="dataSource" ref="dataSource" />	
		<property name="qnameDAO" ref="qnameDAO" />
		<!-- Caches -->
		<property name="childsAssocsCache" ref="becpgChildAssocsCache" />
		<property name="assocsCache" ref="becpgAssocsCache" />
		<property name="registry" ref="asynchronouslyRefreshedCacheRegistry"/>
	</bean>


	<!-- Mail service -->

	<bean id="beCPGMailService" class="fr.becpg.repo.mail.impl.BeCPGMailServiceImpl">
		<property name="nodeService" ref="nodeService" />
		<property name="serviceRegistry" ref="ServiceRegistry" />
		<property name="searchService" ref="searchService" />		
		<property name="repository" ref="repositoryHelper" />			
		<property name="fileFolderService" ref="fileFolderService" />
		<property name="namespaceService" ref="namespaceService" />			
		<property name="actionService" ref="ActionService"/>
		<property name="authorityService" ref="authorityService"/>
		<property name="personService" ref="personService"/>
		<property name="mailFrom" value="${mail.from.default}" />
	</bean>


	
	<!-- Public API -->

	<alias name="remoteEntityService" alias="RemoteEntityService"/>

	<!-- DataLists -->
	
	<bean id="dataListExtractorFactory"
		class="fr.becpg.repo.entity.datalist.impl.DataListExtractorFactoryImpl"/>
	

	
	<bean id="abstractDataListExtractor" abstract="true" init-method="init" class="fr.becpg.repo.entity.datalist.impl.AbstractDataListExtractor">
		<property name="advSearchService" ref="AdvSearchService" />
		<property name="nodeService" ref="nodeService" />
		<property name="services" ref="ServiceRegistry" />
		<property name="attributeExtractorService" ref="attributeExtractorService" />
		<property name="dataListExtractorFactory" ref="dataListExtractorFactory"/>
		<property name="permissionService" ref="permissionService" />
		<property name="entityDictionaryService" ref="entityDictionaryService"/>
		<property name="ratingService" ref="ratingService"/>
	</bean>

   <bean id="simpleExtractor" class="fr.becpg.repo.entity.datalist.impl.SimpleExtractor" parent="abstractDataListExtractor">
		<property name="entityListDAO" ref="entityListDAO"/>
		<property name="dataListSortRegistry" ref="dataListSortRegistry"/>		
		<property name="associationService" ref="associationService"/>
		<property name="paginatedSearchCache" ref="paginatedSearchCache"/>
		<property name="defaultExtractor" value="true"/>
	</bean>
	
	 <bean id="smartContentExtractor" class="fr.becpg.repo.entity.datalist.impl.SmartContentExtractor" parent="simpleExtractor">
	 	<property name="defaultExtractor" value="false"/>
	 </bean>

	<bean id="multiLevelExtractor" class="fr.becpg.repo.entity.datalist.impl.MultiLevelExtractor" parent="simpleExtractor">
		<property name="multiLevelDataListService" ref="multiLevelDataListService" />
		<property name="preferenceService" ref="preferenceService"/>
		<property name="defaultExtractor" value="false"/>
	</bean>

	<bean id="wUsedExtractor" class="fr.becpg.repo.entity.datalist.impl.WUsedExtractor" parent="multiLevelExtractor">
		<property name="wUsedListService" ref="wUsedListService" />
		<property name="namespaceService" ref="namespaceService" />
		<property name="nestedAdvSearchPlugin" ref="nestedAdvSearchPlugin"/>
	</bean>

	<bean id="multiListExtractor" class="fr.becpg.repo.entity.datalist.impl.MultiListExtractor" parent="simpleExtractor">
		<property name="namespaceService" ref="namespaceService" />
		<property name="defaultExtractor" value="false"/>
	</bean>


	<bean id="bulkEditExtractor" class="fr.becpg.repo.entity.datalist.impl.BulkEditExtractor" parent="simpleExtractor">
		<property name="defaultExtractor" value="false"/>
		<property name="namespaceService" ref="namespaceService" />
	</bean>
	

	<!-- Public API -->
	
	<alias name="advSearchService" alias="AdvSearchService"/>
	

	
	<bean id="applicationContextHelper" class="fr.becpg.util.ApplicationContextHelper"/>

    
    <!-- Alfresco patch for country support under MLText -->
    
    <bean id="mlPropertyInterceptor" class="fr.becpg.repo.multilingual.BeCPGMLPropertyInterceptor">
      <property name="nodeService">
         <ref bean="mlAwareNodeService" />
      </property>
      <property name="multilingualContentService">
         <ref bean="multilingualContentService" />
      </property>
      <property name="dictionaryService">
         <ref bean="cachedDictionaryService" />
      </property>
      <property name="namespaceService" ref="namespaceService" />
      <property name="disabledMLTextFields" value="${beCPG.multilinguale.disabledMLTextFields}" />
   </bean>


<!--  NotificationRule Job -->

    <bean id="notificationRuleJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass">
            <value>fr.becpg.repo.notification.NotificationRuleJob</value>
        </property>
        <property name="group" value="beCPG"/>
        <property name="description" value="Run notification rules" />
        <property name="jobDataAsMap">
            <map>
                <entry key="notificationRuleService">
                    <ref bean="notificationRuleService" />
                </entry>
                <entry key="tenantAdminService">
                    <ref bean="tenantAdminService" />
                </entry>
                <entry key="transactionService">
                    <ref bean="transactionService" />
                </entry>
                <entry key="jobLockService">
	               <ref bean="jobLockService" />
	           </entry>
            </map>
        </property>
    </bean>
    
    
    <bean id="notificationRuleSchedulerAccessor" class="org.alfresco.schedule.AlfrescoSchedulerAccessorBean">
		<property name="scheduler" ref="schedulerFactory" />
		<property name="triggers">
			<list>
				<bean id="notificationRuleJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"  >
			        <property name="jobDetail">
			            <ref bean="notificationRuleJob"/>
			        </property>
			        <property name="cronExpression">
			            <value>${beCPG.notification.notify.cronExpression}</value>
			        </property>
			    </bean>
			</list>
		</property>
		<property name="enabled" value="${beCPG.notification.notify.enabled}" />
	</bean>
    
    
  	<!--  Overload of IntegrityChecker --> 
    <bean id="integrityChecker" class="fr.becpg.repo.node.integrity.BeCPGIntegrityChecker" init-method="init">
      <property name="policyComponent" ref="policyComponent"/>
      <property name="dictionaryService" ref="cachedDictionaryService" />
      <property name="nodeService" ref="nodeService" />
      <property name="entityDictionaryService" ref="entityDictionaryService" />
      <property name="entityListDAO" ref="entityListDAO" />
      <property name="attributeExtractorService" ref="attributeExtractorService" />
      <property name="tenantService" ref="tenantService" />
      <property name="enabled" value="${system.integrity.enabled}" />
      <property name="traceOn" value="${system.integrity.trace}" />
      <property name="failOnViolation" value="${system.integrity.failOnViolation}" />
      <property name="maxErrorsPerTransaction" value="5" />
      <property name="storesToIgnore">
         <list>
            <value>${version.store.version2Store}</value>
         </list>
      </property>
   </bean> 

    <!-- Ovverride alfresco copy service -->
    <bean id="copyService" class="fr.becpg.repo.copy.BecpgCopyServiceImpl" parent="abstractBaseCopyService" init-method="init">
        <property name="cannedQueryRegistry" ref="copyServiceCannedQueryRegistry"/>
        <property name="dictionaryService" ref="cachedDictionaryService" />
        <property name="nodeService" ref="NodeService" />
        <property name="policyComponent" ref="policyComponent" />
        <property name="behaviourFilter" ref="policyBehaviourFilter" />
        <property name="ruleService" ref="ruleService" />
        <property name="permissionService" ref="permissionService" />
        <property name="publicServiceAccessService" ref="publicServiceAccessService" />
        <property name="internalNodeService" ref="mlAwareNodeService" />
        <property name="contentPropertyRestrictionInterceptor" ref="contentPropertyRestrictionInterceptor" />
    </bean>
    
    <!-- Ovveride alfresco rule service -->
    
     <bean id="ruleService" class="org.alfresco.repo.rule.RuleServiceImpl" init-method="init">
        <property name="nodeService" ref="NodeService"/>
        <property name="runtimeNodeService" ref="nodeService"/>
        <property name="copyService" ref="copyService"/>
        <property name="actionService" ref="ActionService"/>
        <property name="runtimeActionService" ref="actionService"/>
        <property name="dictionaryService" ref="cachedDictionaryService"/>
        <property name="policyComponent" ref="policyComponent"/>
        <property name="permissionService" ref="permissionService"/>
	    <property name="nodeRulesCache" ref="nodeRulesCache"/>
        <property name="rulesDisabled">
            <value>false</value>
        </property>
   </bean>

 <!--  Site role precedence - higher number - more important role -->    
    <bean id="siteRoleComparator" class="org.alfresco.repo.site.RoleComparatorImpl" init-method="init">
       <property name="rolePrecedence">
       		<map>
       			<entry key="SiteManager" value="5" />
       			<entry key="SiteCollaborator" value="4" />
       			<entry key="SiteContributor" value="3" />
       			<entry key="SiteBranchManager" value="2" />
       			<entry key="SiteConsumer" value="1" />
       		</map>
       </property>
    </bean>
   
   	<bean id="versionCleanerJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
			<value>fr.becpg.repo.entity.version.VersionCleanerJob</value>
		</property>
		<property name="group" value="beCPG"/>
        <property name="description" value="Run version cleanup" />
       	<property name="jobDataAsMap">
			<map>
	           <entry key="jobLockService">
                    <ref bean="jobLockService" />
               </entry>
	           <entry key="versionCleanerService">
                    <ref bean="versionCleanerService" />
               </entry>
			</map>
		</property>
        
	</bean>
	
	<bean id="versionCleanerSchedulerAccessor" class="org.alfresco.schedule.AlfrescoSchedulerAccessorBean">
		<property name="scheduler" ref="schedulerFactory" />
		<property name="triggers">
			<list>
				<bean id="versionCleanerJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
					<property name="jobDetail" ref="versionCleanerJob"/>
					<property name="cronExpression" value="${beCPG.version.cleaner.cronExpression}"/>
				</bean>
			</list>
		</property>
		<property name="enabled" value="${beCPG.version.cleaner.enabled}" />
	</bean>
  
   
   	<bean id="batchThreadPoolExecutor" class="org.alfresco.util.ThreadPoolExecutorFactoryBean">
      <property name="poolName" value="beCPGBatchThreadPoolExecutor" />
      <property name="corePoolSize" value="1" />
      <property name="maximumPoolSize" value="1" />
      <property name="threadPriority" value="4" />
    </bean>
   
   
   <!-- 
    <bean id="search.fts.alfresco.db" class="org.alfresco.repo.search.impl.solr.DbAftsQueryLanguage" >
        <property name="dictionaryService" ref="cachedDictionaryService" />
        <property name="namespaceService" ref="namespaceService" />
        <property name="factories">
            <list>
                <ref bean="search.indexerAndSearcherFactory" />
            </list>
        </property>
        <property name="queryEngine">
            <ref bean="search.dbQueryEngine" />
        </property>
         <property name="metadataIndexCheck1">
            <ref bean="metadataQueryIndexesCheck" />
        </property>
        <property name="metadataIndexCheck2">
            <ref bean="metadataQueryIndexesCheck2" />
        </property>
    </bean>
    
    <bean id="search.dbQueryEngineImpl" class="org.alfresco.repo.search.impl.querymodel.impl.db.DBQueryEngine" >
        <property name="dictionaryService" ref="cachedDictionaryService" />
        <property name="namespaceService" ref="namespaceService" />
        <property name="sqlSessionTemplate" ref="repoSqlSessionTemplate"/>
        <property name="qnameDAO" ref="qnameDAO"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="nodeDAO" ref="nodeDAO"/>
        <property name="tenantService" ref="tenantService"/>
        <property name="metadataIndexCheck2">
            <ref bean="metadataQueryIndexesCheck2" />
        </property>
    </bean>
    
     -->
     
     <!-- Override SOLR cron backup 
     
     
    <bean id="search.alfrescoCoreSolrBackupClient" class="org.alfresco.repo.search.impl.solr.SolrBackupClient" >
        <property name="jobLockService">
            <ref bean="jobLockService" />
        </property>
        <property name="remoteBackupLocation">
            <value>${solr.backup.alfresco.remoteBackupLocation}</value>
        </property>
        <property name="numberToKeep">
            <value>${solr.backup.alfresco.numberToKeep}</value>
        </property>
        <property name="core">
            <value>${beCPG.solr.alfresco.core}</value>
        </property>
        <property name="solrAdminClient">
            <ref bean="solrAdminClient" />
        </property>
        <property name="solrQueryHTTPClient">
            <ref bean="search.solrQueryHTTPCLient" />
        </property>
    </bean>
    
    
    <bean id="search.archiveCoreSolrBackupClient" class="org.alfresco.repo.search.impl.solr.SolrBackupClient" >
        <property name="jobLockService">
            <ref bean="jobLockService" />
        </property>
        <property name="remoteBackupLocation">
            <value>${solr.backup.archive.remoteBackupLocation}</value>
        </property>
         <property name="numberToKeep">
            <value>${solr.backup.archive.numberToKeep}</value>
        </property>
        <property name="core">
            <value>${beCPG.solr.archive.core}</value>
        </property>
        <property name="solrAdminClient">
            <ref bean="solrAdminClient" />
        </property>
        <property name="solrQueryHTTPClient">
            <ref bean="search.solrQueryHTTPCLient" />
        </property>
    </bean>
    
    -->
     
</beans>
