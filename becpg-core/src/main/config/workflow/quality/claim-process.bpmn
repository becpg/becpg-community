<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.bcpg.fr/model/workflow/1.0">
  <signal id="endClassificationSignal" name="endClassificationSignal"></signal>
  <process id="claimProcess" name="Claim Process" isExecutable="true">
    <documentation>Place documentation for the 'claim-process' process here.</documentation>
    <startEvent id="startClaimProcess" name="Saisie réclamation" activiti:formKey="ncwf:claimStartTask"></startEvent>
    <sequenceFlow id="startFlow" sourceRef="startClaimProcess" targetRef="initialiseNCTask">
      <extensionElements>
        <activiti:executionListener event="start" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string>execution.setVariable('ncwf_claimRejectedState','none');
	                execution.setVariable('ncwf_ncType',"Claim");
	                if(execution.getVariable('bcpgwf_notifyUsers')==null){
	                	execution.setVariable('bcpgwf_notifyUsers',null);
	                }
	                execution.setVariable('ncwf_ncState',"analysis");
	                if(execution.getVariable('ncwf_claimStartAsDraft')==null){
	                 	 execution.setVariable('ncwf_claimStartAsDraft',false);
	                 }
	                 execution.setVariable('skipClassification',false);</activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
    </sequenceFlow>
    <serviceTask id="initialiseNCTask" name="Initialisation réclamation" activiti:delegateExpression="${CreateNC}"></serviceTask>
    <userTask id="enteringClaimTask" name="Saisie réclamation" activiti:assignee="${initiator.properties.userName}" activiti:candidateUsers="initiator" activiti:formKey="ncwf:claimStartTask">
      <extensionElements>
        <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>task.setVariable('ncwf_claimRejectedCause',  execution.getVariable('ncwf_claimRejectedCause'));</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>execution.setVariable('ncwf_claimRejectedState','none');
                  execution.setVariable('ncwf_claimRejectedCause','');
                  
                  execution.setVariable('qa_claimSource', task.getVariable('qa_claimSource'));
	             
	               execution.setVariable('bcpg_clients', task.getVariable('bcpg_clients'));
						execution.setVariable('qa_claimCustomerInformation', task.getVariable('qa_claimCustomerInformation'));
						
						execution.setVariable('qa_product', task.getVariable('qa_product'));
						
						execution.setVariable('qa_batchId', task.getVariable('qa_batchId'));
						execution.setVariable('qa_productUseByDate', task.getVariable('qa_productUseByDate'));
						execution.setVariable('qa_claimTradeContact', task.getVariable('qa_claimTradeContact'));
						execution.setVariable('qa_claimTradeContactCheck', task.getVariable('qa_claimTradeContactCheck'));
						execution.setVariable('qa_claimTracking', task.getVariable('qa_claimTracking'));
						execution.setVariable('qa_claimDescription', task.getVariable('qa_claimDescription'));
			
                  execution.setVariable('bcpgwf_notifyAssignee', task.getVariable('bcpgwf_notifyAssignee'));
        			   execution.setVariable('bcpgwf_notifyUsers', task.getVariable('bcpgwf_notifyUsers'));
        			   execution.setVariable('bcpgwf_notifyMe', task.getVariable('bcpgwf_notifyMe'));
                  
                  execution.setVariable('skipClassification',false);
                   
            	   task.setVariable('ncwf_ncState',"analysis");</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="fr.becpg.repo.workflow.activiti.nc.UpdateNC"></activiti:taskListener>
      </extensionElements>
    </userTask>
    <userTask id="analysisTask" name="Orientation réclamation" activiti:candidateGroups="GROUP_ClaimMgr" activiti:formKey="ncwf:claimAnalysisTask">
      <extensionElements>
        <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>&lt;import resource="classpath:alfresco/module/${pom.artifactId}/workflow/quality/claim-process.js"&gt;
							
	               if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate;
	               if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
	               task.setVariable('bpm_comment', '');
				
	               for (var i = 0; i &lt; bpm_package.children.length; i++)
						{
							var nc = bpm_package.children[i];
							if(nc.isSubType("qa:nc")){
							   bpm_workflowDescription = extractName(nc);
								task.setVariable('bpm_workflowDescription',bpm_workflowDescription);
							}
						}
						
	               var tDate = new  java.util.Date();
		            	tDate.setDate(tDate.getDate()+5);
	               var rDate = new  java.util.Date();
		            	rDate.setDate(rDate.getDate()+9);
	            
	               task.setVariable('ncwf_claimTreatmentDueDate', tDate);
	               task.setVariable('ncwf_claimResponseDueDate',  rDate); 
	               
	               task.setVariable('ncwf_claimRejectedCause',  execution.getVariable('ncwf_claimRejectedCause'));
	               task.setVariable('ncwf_claimRejectedState', 'none');
	               
	              if (bcpgwf_notifyUsers != null)  {
				           	for (var i = 0; i &lt; bcpgwf_notifyUsers.size(); i++){
									sendMail(bcpgwf_notifyUsers.get(i),	initiator,bcpg.getMessage('claimProcess.mail.notify.analysis.subject',bpm_workflowDescription), bcpg.getMessage('claimProcess.mail.notify.analysis.message'));
								}
				      }</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>&lt;import resource="classpath:alfresco/module/${pom.artifactId}/workflow/quality/claim-process.js"&gt;
               execution.setVariable('ncwf_claimTreatmentDueDate', task.getVariable('ncwf_claimTreatmentDueDate'));
               execution.setVariable('ncwf_claimResponseDueDate',  task.getVariable('ncwf_claimResponseDueDate'));
               
               task.setVariable('ncwf_ncState', 'classification');
               
               if(task.getVariable('qa_claimResponseActor')!=null ){
	                execution.setVariable('qa_claimResponseActor',task.getVariable('qa_claimResponseActor'));
	                task.setVariable('ncwf_ncState','response');
	            } else {
	                execution.setVariable('qa_claimResponseActor',null);
	            }
               
               if(task.getVariable('qa_claimTreatmentActor')!=null ){
                  execution.setVariable('qa_claimTreatmentActor',task.getVariable('qa_claimTreatmentActor'));
                  task.setVariable('ncwf_ncState','treatment');
               } else {
                  execution.setVariable('qa_claimTreatmentActor',null);
               }
	            
               
               if(task.getVariable('ncwf_claimRejectedState')!='none'){
                 task.setVariable('ncwf_ncState',"new");
                 execution.setVariable('ncwf_claimRejectedCause',  task.getVariable('ncwf_claimRejectedCause'));
               } else {
                 execution.setVariable('ncwf_claimRejectedCause',  '');
                 
                 
                 if (bcpgwf_notifyUsers != null)  {
				          for (var i = 0; i &lt; bcpgwf_notifyUsers.size(); i++){
								sendMail(bcpgwf_notifyUsers.get(i),initiator, bcpg.getMessage('claimProcess.mail.notify.analysis.end.subject',bpm_workflowDescription), bcpg.getMessage('claimProcess.mail.notify.analysis.end.message'));
			          	}
			          }
			          if(bcpgwf_notifyMe != null){
			             sendMail(initiator,initiator,  bcpg.getMessage('claimProcess.mail.notify.analysis.end.subject',bpm_workflowDescription),	 bcpg.getMessage('claimProcess.mail.notify.analysis.end.message'));
			          }
                 
               }
               
               execution.setVariable('bcpgwf_notifyAssignee', task.getVariable('bcpgwf_notifyAssignee'));
        			execution.setVariable('bcpgwf_notifyUsers', task.getVariable('bcpgwf_notifyUsers'));
               execution.setVariable('ncwf_claimRejectedState',  task.getVariable('ncwf_claimRejectedState'));</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="fr.becpg.repo.workflow.activiti.nc.UpdateNC"></activiti:taskListener>
      </extensionElements>
    </userTask>
    <sequenceFlow id="toDispatchTreatmentGateway" sourceRef="endOrientationGateway" targetRef="dispatchTreatmentGateway">
      <extensionElements>
        <activiti:executionListener event="take" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string>logger.error("Go To Dispatch Treatment Gateway ");
            			logger.error("State :  "+ncwf_claimRejectedState);
            			logger.error("Treatment Actor: "+(qa_claimTreatmentActor!=null));
            			logger.error("Response Actor: "+(qa_claimResponseActor!=null));
            			logger.error("Skip classification: "+skipClassification);</activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ncwf_claimRejectedState != 'entry'}]]></conditionExpression>
    </sequenceFlow>
    <inclusiveGateway id="dispatchTreatmentGateway" name="Inclusive Gateway"></inclusiveGateway>
    <sequenceFlow id="toTreatmentFlow" name="Si acteur traitement" sourceRef="dispatchTreatmentGateway" targetRef="claimTreatmentTask">
      <extensionElements>
        <activiti:executionListener event="take" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string>logger.error("Go To traitement "+qa_claimTreatmentActor);</activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${qa_claimTreatmentActor!=null && ncwf_claimRejectedState !='classification' && ncwf_claimRejectedState !='response'  }]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="toClassificationFlow" name="Dans tous les cas" sourceRef="dispatchTreatmentGateway" targetRef="classificationTask">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${skipClassification == false && (  ncwf_claimRejectedState =='classification' ||   ncwf_claimRejectedState =='none') }]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="toResponseWithoutTraitementFlow" name="Si acteur réponse et pas d'acteur traitement" sourceRef="dispatchTreatmentGateway" targetRef="claimResponseTask">
      <extensionElements>
        <activiti:executionListener event="take" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string>logger.error("Go To response"+qa_claimResponseActor);</activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${(qa_claimTreatmentActor == null &&  qa_claimResponseActor!=null && ncwf_claimRejectedState =='none') 
      ||  (  qa_claimResponseActor!=null && ncwf_claimRejectedState =='response')}]]></conditionExpression>
    </sequenceFlow>
    <userTask id="claimTreatmentTask" name="Traitement" activiti:assignee="${qa_claimTreatmentActor.properties.userName}" activiti:formKey="ncwf:claimTreatmentTask">
      <extensionElements>
        <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>&lt;import resource="classpath:alfresco/module/${pom.artifactId}/workflow/quality/claim-process.js"&gt;
            if (typeof ncwf_claimTreatmentDueDate != 'undefined') task.dueDate = ncwf_claimTreatmentDueDate;
            if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
					
					task.setVariable('bpm_comment', '');

               task.setVariable('ncwf_claimRejectedCause',  execution.getVariable('ncwf_claimRejectedCause'));
            	task.setVariable('ncwf_claimRejectedState', 'none');
            	
            	if (bcpgwf_notifyAssignee) {
						sendMail(qa_claimTreatmentActor,initiator,  
								 bcpg.getMessage('claimProcess.mail.action.treatment.subject',bpm_workflowDescription),
								 bcpg.getMessage('claimProcess.mail.action.treatment.message'),
								 true);	
		          }</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>&lt;import resource="classpath:alfresco/module/${pom.artifactId}/workflow/quality/claim-process.js"&gt;
              
               task.setVariable('ncwf_ncState',task.getVariable('ncwf_claimRejectedState'));
            
	            if(task.getVariable('ncwf_claimRejectedState') == 'none'){
	              task.setVariable('qa_claimTreatmentDate', new  java.util.Date());
	              if(execution.getVariable('qa_claimResponseActor')!=null){
	               task.setVariable('ncwf_ncState','response');
	              } else {
	               task.setVariable('ncwf_ncState','closing');
	              }
	               execution.setVariable('ncwf_claimRejectedCause',  '');
	               
	              if (bcpgwf_notifyUsers != null)  {
			          for (var i = 0; i &lt; bcpgwf_notifyUsers.size(); i++){
							 sendMail(bcpgwf_notifyUsers.get(i),initiator,  
		             		 bcpg.getMessage('claimProcess.mail.notify.treatment.end.subject',bpm_workflowDescription),
								 bcpg.getMessage('claimProcess.mail.notify.treatment.end.message')
								); 
						}
		          }
		          
		          if(bcpgwf_notifyMe != null){
		               sendMail(initiator,initiator, 
		                   bcpg.getMessage('claimProcess.mail.notify.treatment.end.subject',bpm_workflowDescription),
								 bcpg.getMessage('claimProcess.mail.notify.treatment.end.message')); 
					  }
	               
               } else {
                 execution.setVariable('ncwf_claimRejectedCause',  task.getVariable('ncwf_claimRejectedCause'));
               }
              
          	  execution.setVariable('ncwf_claimRejectedState',  task.getVariable('ncwf_claimRejectedState'));
          	  execution.setVariable('qa_claimTreatementDetails', task.getVariable('qa_claimTreatementDetails'));
        
        			execution.setVariable('bcpgwf_notifyAssignee', task.getVariable('bcpgwf_notifyAssignee'));
        			execution.setVariable('bcpgwf_notifyUsers', task.getVariable('bcpgwf_notifyUsers'));</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="fr.becpg.repo.workflow.activiti.nc.UpdateNC"></activiti:taskListener>
      </extensionElements>
    </userTask>
    <sequenceFlow id="toValidateTreatement1" sourceRef="claimTreatmentTask" targetRef="validateTreatementGateway"></sequenceFlow>
    <userTask id="claimResponseTask" name="Réponse" activiti:assignee="${qa_claimResponseActor.properties.userName}" activiti:formKey="ncwf:claimResponseTask">
      <extensionElements>
        <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>&lt;import resource="classpath:alfresco/module/${pom.artifactId}/workflow/quality/claim-process.js"&gt;
            if (typeof ncwf_claimResponseDueDate != 'undefined') task.dueDate = ncwf_claimResponseDueDate;
            if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
					
					task.setVariable('bpm_comment', '');
					
               task.setVariable('ncwf_claimRejectedCause',  execution.getVariable('ncwf_claimRejectedCause'));
               task.setVariable('ncwf_claimRejectedState', 'none');
              
               task.setVariable('qa_claimTreatementDetails', execution.getVariable('qa_claimTreatementDetails'));
            	
            	if (bcpgwf_notifyAssignee) {
						sendMail(qa_claimResponseActor,initiator, 
						       bcpg.getMessage('claimProcess.mail.action.response.subject',bpm_workflowDescription),
								 bcpg.getMessage('claimProcess.mail.action.response.message'),
								 true);  
		          }</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>&lt;import resource="classpath:alfresco/module/${pom.artifactId}/workflow/quality/claim-process.js"&gt;
						
            	if(task.getVariable('ncwf_claimRejectedState') == 'none'){
	              task.setVariable('qa_claimResponseDate', new  java.util.Date());
	              task.setVariable('ncwf_ncState','closing');
	              execution.setVariable('ncwf_claimRejectedCause',  '');
	                
	                
			              if (bcpgwf_notifyUsers != null)  {
					          for (var i = 0; i &lt; bcpgwf_notifyUsers.size(); i++){
										sendMail(bcpgwf_notifyUsers.get(i),initiator,
										  bcpg.getMessage('claimProcess.mail.notify.response.end.subject',bpm_workflowDescription),
										  bcpg.getMessage('claimProcess.mail.notify.response.end.message'));  
									}	
				          	}
				           if(bcpgwf_notifyMe != null){
				               sendMail(initiator,initiator,
										  bcpg.getMessage('claimProcess.mail.notify.response.end.subject',bpm_workflowDescription),
										  bcpg.getMessage('claimProcess.mail.notify.response.end.message'));
							  }
	             
	            } else {
	               task.setVariable('ncwf_ncState',task.getVariable('ncwf_claimRejectedState'));
	               execution.setVariable('ncwf_claimRejectedCause',  task.getVariable('ncwf_claimRejectedCause'));
	            }
	            
	            execution.setVariable('bcpgwf_notifyAssignee', task.getVariable('bcpgwf_notifyAssignee'));
        			execution.setVariable('bcpgwf_notifyUsers', task.getVariable('bcpgwf_notifyUsers'));
        			
	            execution.setVariable('ncwf_claimRejectedState',  task.getVariable('ncwf_claimRejectedState'));
           		execution.setVariable('qa_claimResponseState', task.getVariable('qa_claimResponseState'));
			      execution.setVariable('qa_claimResponseDetails', task.getVariable('qa_claimResponseDetails'));</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="fr.becpg.repo.workflow.activiti.nc.UpdateNC"></activiti:taskListener>
      </extensionElements>
    </userTask>
    <sequenceFlow id="toResponseFlow" name="Si acteur réponse ou refus" sourceRef="validateTreatementGateway" targetRef="claimResponseTask">
      <extensionElements>
        <activiti:executionListener event="take" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string>logger.error("Go To response"+qa_claimResponseActor);</activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${qa_claimResponseActor!=null && !(  ncwf_claimRejectedState == 'treatment'  ||   ncwf_claimRejectedState == 'analysis')}]]></conditionExpression>
    </sequenceFlow>
    <exclusiveGateway id="validateTreatementGateway" name="Exclusive Gateway"></exclusiveGateway>
    <userTask id="claimClosingTask" name="Clôture réclamation" activiti:candidateGroups="GROUP_ClaimMgr" activiti:formKey="ncwf:claimClosingTask">
      <extensionElements>
        <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>&lt;import resource="classpath:alfresco/module/${pom.artifactId}/workflow/quality/claim-process.js"&gt;
						
           		if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate;
               if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
					
					task.setVariable('bpm_comment', '');
					
		           if (bcpgwf_notifyUsers != null)  {
					       for (var i = 0; i &lt; bcpgwf_notifyUsers.size(); i++){
										sendMail(initiator,initiator, 
						    		   bcpg.getMessage('claimProcess.mail.notify.closing.subject',bpm_workflowDescription),
								    	bcpg.getMessage('claimProcess.mail.notify.closing.message'));  
									}	
				      }
				      if(bcpgwf_notifyMe != null){
				             sendMail(initiator,initiator, 
						      bcpg.getMessage('claimProcess.mail.notify.closing.subject',bpm_workflowDescription),
						      bcpg.getMessage('claimProcess.mail.notify.closing.message'));  
						 }
							  
				
               
               task.setVariable('qa_claimResponseState', execution.getVariable('qa_claimResponseState'));
			   	task.setVariable('qa_claimResponseDetails', execution.getVariable('qa_claimResponseDetails'));
			   	task.setVariable('qa_claimTreatementDetails', execution.getVariable('qa_claimTreatementDetails'));
			   	task.setVariable('qa_claimType', execution.getVariable('qa_claimType'));
          
               task.setVariable('ncwf_claimRejectedCause',  execution.getVariable('ncwf_claimRejectedCause'));
               task.setVariable('ncwf_claimRejectedState', 'none');</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>&lt;import resource="classpath:alfresco/module/${pom.artifactId}/workflow/quality/claim-process.js"&gt;
						
             if(task.getVariable('ncwf_claimRejectedState') == 'none'){
	              task.setVariable('qa_claimClosingDate', new  java.util.Date());
	              task.setVariable('ncwf_ncState','closed');
	              execution.setVariable('ncwf_claimRejectedCause',  '');
	              
	                  if (bcpgwf_notifyUsers != null)  {
					          for (var i = 0; i &lt; bcpgwf_notifyUsers.size(); i++){
										sendMail(bcpgwf_notifyUsers.get(i),initiator,
										  bcpg.getMessage('claimProcess.mail.notify.closing.end.subject',bpm_workflowDescription),
										  bcpg.getMessage('claimProcess.mail.notify.closing.end.message'));  
									}	
				          	}
				           if(bcpgwf_notifyMe != null){
				               sendMail(initiator,initiator,
										  bcpg.getMessage('claimProcess.mail.notify.closing.end.subject',bpm_workflowDescription),
										  bcpg.getMessage('claimProcess.mail.notify.closing.end.message'));
							  }
	              
	            } else {
	              task.setVariable('ncwf_ncState',task.getVariable('ncwf_claimRejectedState'));
	              execution.setVariable('ncwf_claimRejectedCause',  task.getVariable('ncwf_claimRejectedCause'));
	            }
	            
	            
	            execution.setVariable('bcpgwf_notifyAssignee', task.getVariable('bcpgwf_notifyAssignee'));
        			execution.setVariable('bcpgwf_notifyUsers', task.getVariable('bcpgwf_notifyUsers'));
        			
               execution.setVariable('ncwf_claimRejectedState',  task.getVariable('ncwf_claimRejectedState'));</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="fr.becpg.repo.workflow.activiti.nc.UpdateNC"></activiti:taskListener>
      </extensionElements>
    </userTask>
    <userTask id="classificationTask" name="Classification" activiti:candidateGroups="GROUP_ClaimMgr" activiti:formKey="ncwf:claimClassificationTask">
      <extensionElements>
        <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate;
              if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
					
					task.setVariable('bpm_comment', '');

					task.setVariable('ncwf_ncState','classification');</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
          <activiti:field name="script">
            <activiti:string>execution.setVariable('qa_claimType', task.getVariable('qa_claimType'));
		              execution.setVariable('bcpgwf_notifyAssignee', task.getVariable('bcpgwf_notifyAssignee'));
        		  	     execution.setVariable('bcpgwf_notifyUsers', task.getVariable('bcpgwf_notifyUsers'));
        		  	     if(execution.getVariable('ncwf_claimRejectedState') == 'classification'){
        		  	     	execution.setVariable('ncwf_claimRejectedState', 'none');
        		  	     }</activiti:string>
          </activiti:field>
        </activiti:taskListener>
        <activiti:taskListener event="complete" class="fr.becpg.repo.workflow.activiti.nc.UpdateNC"></activiti:taskListener>
      </extensionElements>
    </userTask>
    <inclusiveGateway id="jointTreatmentGateway" name="Inclusive Gateway"></inclusiveGateway>
    <sequenceFlow id="toValidateTreatement2" sourceRef="validateResponseGateway" targetRef="validateTreatementGateway">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ ncwf_claimRejectedState != 'none' }]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="toNotificationFlow" sourceRef="endTreatmentChoice" targetRef="claimClosingTask">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ncwf_claimRejectedState == 'none' }]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="backToAnalysisFlow1" name="Refus ou demande complémentaire" sourceRef="endTreatmentChoice" targetRef="analysisTask">
      <extensionElements>
        <activiti:executionListener event="take" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string>logger.error("Go to analysis");
					execution.setVariable('skipClassification',true);</activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ ncwf_claimRejectedState == 'analysis'  ||   (ncwf_claimRejectedState == 'treatment'  &&  qa_claimTreatmentActor==null )
 || (ncwf_claimRejectedState == 'response' && qa_claimTreatmentActor==null  && qa_claimResponseActor==null) }]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="toAnalysisFlow2" sourceRef="enteringClaimTask" targetRef="analysisTask"></sequenceFlow>
    <exclusiveGateway id="endOrientationGateway" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="toEndOrientationGateway" sourceRef="analysisTask" targetRef="endOrientationGateway"></sequenceFlow>
    <sequenceFlow id="backToEnteringClaimFlow" name="Refus ou demande complémentaire" sourceRef="endOrientationGateway" targetRef="enteringClaimTask">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ncwf_claimRejectedState == 'entry'}]]></conditionExpression>
    </sequenceFlow>
    <exclusiveGateway id="validateClosingGateway" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="toValidateClosingGateway" sourceRef="claimClosingTask" targetRef="validateClosingGateway"></sequenceFlow>
    <sequenceFlow id="backToTreatementFlow1" name="Refus ou demande complémentaire" sourceRef="validateClosingGateway" targetRef="endOrientationGateway">
      <extensionElements>
        <activiti:executionListener event="take" class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
          <activiti:field name="script">
            <activiti:string>logger.error("Go to analysis");
if(ncwf_claimRejectedState!='classification'){
   execution.setVariable('skipClassification',true);
} else {
  execution.setVariable('skipClassification',false);
}</activiti:string>
          </activiti:field>
        </activiti:executionListener>
      </extensionElements>
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ncwf_claimRejectedState != 'none' }]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="backToTraitementFlow3" name="Refus ou demande complémentaire" sourceRef="validateTreatementGateway" targetRef="claimTreatmentTask">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${(ncwf_claimRejectedState == 'treatment' && qa_claimTreatmentActor!=null)
  || (ncwf_claimRejectedState == 'response' && qa_claimResponseActor==null) }]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="toEndFlow" sourceRef="validateClosingGateway" targetRef="endevent1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ncwf_claimRejectedState == 'none' }]]></conditionExpression>
    </sequenceFlow>
    <endEvent id="endevent1" name="End"></endEvent>
    <sequenceFlow id="endTreatmentFlow" sourceRef="validateTreatementGateway" targetRef="jointTreatmentGateway">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ncwf_claimRejectedState == 'none' ||
    ncwf_claimRejectedState == 'analysis'  || 
(ncwf_claimRejectedState == 'treatment' && qa_claimTreatmentActor==null ) ||
 (ncwf_claimRejectedState == 'response' && qa_claimTreatmentActor==null  && qa_claimResponseActor==null) }]]></conditionExpression>
    </sequenceFlow>
    <exclusiveGateway id="validateResponseGateway" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="toValidateResponse" sourceRef="claimResponseTask" targetRef="validateResponseGateway"></sequenceFlow>
    <sequenceFlow id="flow63" sourceRef="validateResponseGateway" targetRef="jointTreatmentGateway">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ncwf_claimRejectedState == 'none' }]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="endClassificationFlow" sourceRef="classificationTask" targetRef="jointTreatmentGateway"></sequenceFlow>
    <exclusiveGateway id="endTreatmentChoice" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="flow64" sourceRef="jointTreatmentGateway" targetRef="endTreatmentChoice"></sequenceFlow>
    <sequenceFlow id="flow65" sourceRef="endOrientationGateway" targetRef="analysisTask">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ ncwf_claimRejectedState == 'analysis'  ||   (ncwf_claimRejectedState == 'treatment'  &&  qa_claimTreatmentActor==null ) || (ncwf_claimRejectedState == 'response' && qa_claimTreatmentActor==null  && qa_claimResponseActor==null) }]]></conditionExpression>
    </sequenceFlow>
    <boundaryEvent id="boundaryClassificationSignal" name="Signal" attachedToRef="classificationTask" cancelActivity="true">
      <signalEventDefinition signalRef="endClassificationSignal"></signalEventDefinition>
    </boundaryEvent>
    <intermediateThrowEvent id="signalintermediatethrowevent1" name="SignalThrowEvent">
      <signalEventDefinition signalRef="endClassificationSignal"></signalEventDefinition>
    </intermediateThrowEvent>
    <sequenceFlow id="flow66" sourceRef="validateTreatementGateway" targetRef="signalintermediatethrowevent1">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ ncwf_claimRejectedState == 'analysis'  ||   (ncwf_claimRejectedState == 'treatment'  &&  qa_claimTreatmentActor==null )
 || (ncwf_claimRejectedState == 'response' && qa_claimTreatmentActor==null  && qa_claimResponseActor==null) }]]></conditionExpression>
    </sequenceFlow>
    <exclusiveGateway id="testDraftGateway" name="Exclusive Gateway"></exclusiveGateway>
    <sequenceFlow id="toTestIsDraft" sourceRef="initialiseNCTask" targetRef="testDraftGateway"></sequenceFlow>
    <sequenceFlow id="isDraftFlow" sourceRef="testDraftGateway" targetRef="enteringClaimTask">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ncwf_claimStartAsDraft == true}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="isNotDraftFlow" sourceRef="testDraftGateway" targetRef="analysisTask">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${ncwf_claimStartAsDraft == false}]]></conditionExpression>
    </sequenceFlow>
    <textAnnotation id="textannotation1">
      <text>Assigné au groupe Orientation réclamation </text>
    </textAnnotation>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_claimProcess">
    <bpmndi:BPMNPlane bpmnElement="claimProcess" id="BPMNPlane_claimProcess">
      <bpmndi:BPMNShape bpmnElement="analysisTask" id="BPMNShape_analysisTask">
        <omgdc:Bounds height="55.0" width="105.0" x="186.0" y="319.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="claimClosingTask" id="BPMNShape_claimClosingTask">
        <omgdc:Bounds height="55.0" width="105.0" x="848.0" y="323.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent1" id="BPMNShape_endevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="1100.0" y="333.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="initialiseNCTask" id="BPMNShape_initialiseNCTask">
        <omgdc:Bounds height="55.0" width="105.0" x="-77.0" y="319.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="startClaimProcess" id="BPMNShape_startClaimProcess">
        <omgdc:Bounds height="35.0" width="35.0" x="-160.0" y="329.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="claimTreatmentTask" id="BPMNShape_claimTreatmentTask">
        <omgdc:Bounds height="55.0" width="105.0" x="427.0" y="230.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="classificationTask" id="BPMNShape_classificationTask">
        <omgdc:Bounds height="55.0" width="105.0" x="505.0" y="399.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="claimResponseTask" id="BPMNShape_claimResponseTask">
        <omgdc:Bounds height="55.0" width="105.0" x="650.0" y="110.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="textannotation1" id="BPMNShape_textannotation1">
        <omgdc:Bounds height="50.0" width="100.0" x="131.0" y="252.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="validateTreatementGateway" id="BPMNShape_validateTreatementGateway">
        <omgdc:Bounds height="40.0" width="40.0" x="569.0" y="237.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="enteringClaimTask" id="BPMNShape_enteringClaimTask">
        <omgdc:Bounds height="55.0" width="105.0" x="50.0" y="414.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endOrientationGateway" id="BPMNShape_endOrientationGateway">
        <omgdc:Bounds height="40.0" width="40.0" x="310.0" y="326.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="dispatchTreatmentGateway" id="BPMNShape_dispatchTreatmentGateway">
        <omgdc:Bounds height="40.0" width="40.0" x="370.0" y="326.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="jointTreatmentGateway" id="BPMNShape_jointTreatmentGateway">
        <omgdc:Bounds height="40.0" width="40.0" x="682.0" y="330.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="validateClosingGateway" id="BPMNShape_validateClosingGateway">
        <omgdc:Bounds height="40.0" width="40.0" x="1010.0" y="330.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="validateResponseGateway" id="BPMNShape_validateResponseGateway">
        <omgdc:Bounds height="40.0" width="40.0" x="682.0" y="197.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endTreatmentChoice" id="BPMNShape_endTreatmentChoice">
        <omgdc:Bounds height="40.0" width="40.0" x="761.0" y="330.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="boundaryClassificationSignal" id="BPMNShape_boundaryClassificationSignal">
        <omgdc:Bounds height="30.0" width="30.0" x="575.0" y="439.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="signalintermediatethrowevent1" id="BPMNShape_signalintermediatethrowevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="621.0" y="284.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="testDraftGateway" id="BPMNShape_testDraftGateway">
        <omgdc:Bounds height="40.0" width="40.0" x="83.0" y="326.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="toDispatchTreatmentGateway" id="BPMNEdge_toDispatchTreatmentGateway">
        <omgdi:waypoint x="350.0" y="346.0"></omgdi:waypoint>
        <omgdi:waypoint x="370.0" y="346.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toValidateClosingGateway" id="BPMNEdge_toValidateClosingGateway">
        <omgdi:waypoint x="953.0" y="350.0"></omgdi:waypoint>
        <omgdi:waypoint x="1010.0" y="350.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toResponseWithoutTraitementFlow" id="BPMNEdge_toResponseWithoutTraitementFlow">
        <omgdi:waypoint x="390.0" y="326.0"></omgdi:waypoint>
        <omgdi:waypoint x="390.0" y="137.0"></omgdi:waypoint>
        <omgdi:waypoint x="650.0" y="137.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="52.0" width="100.0" x="-49.0" y="2.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="startFlow" id="BPMNEdge_startFlow">
        <omgdi:waypoint x="-125.0" y="346.0"></omgdi:waypoint>
        <omgdi:waypoint x="-77.0" y="346.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toTreatmentFlow" id="BPMNEdge_toTreatmentFlow">
        <omgdi:waypoint x="390.0" y="326.0"></omgdi:waypoint>
        <omgdi:waypoint x="390.0" y="257.0"></omgdi:waypoint>
        <omgdi:waypoint x="427.0" y="257.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="13.0" width="93.0" x="-49.0" y="22.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toClassificationFlow" id="BPMNEdge_toClassificationFlow">
        <omgdi:waypoint x="390.0" y="366.0"></omgdi:waypoint>
        <omgdi:waypoint x="390.0" y="426.0"></omgdi:waypoint>
        <omgdi:waypoint x="505.0" y="426.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="13.0" width="83.0" x="-59.0" y="-39.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toResponseFlow" id="BPMNEdge_toResponseFlow">
        <omgdi:waypoint x="589.0" y="237.0"></omgdi:waypoint>
        <omgdi:waypoint x="702.0" y="165.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="39.0" width="100.0" x="-44.0" y="-11.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toEndFlow" id="BPMNEdge_toEndFlow">
        <omgdi:waypoint x="1050.0" y="350.0"></omgdi:waypoint>
        <omgdi:waypoint x="1100.0" y="350.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toNotificationFlow" id="BPMNEdge_toNotificationFlow">
        <omgdi:waypoint x="801.0" y="350.0"></omgdi:waypoint>
        <omgdi:waypoint x="848.0" y="350.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toValidateTreatement1" id="BPMNEdge_toValidateTreatement1">
        <omgdi:waypoint x="532.0" y="257.0"></omgdi:waypoint>
        <omgdi:waypoint x="569.0" y="257.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toValidateTreatement2" id="BPMNEdge_toValidateTreatement2">
        <omgdi:waypoint x="702.0" y="237.0"></omgdi:waypoint>
        <omgdi:waypoint x="614.0" y="257.0"></omgdi:waypoint>
        <omgdi:waypoint x="609.0" y="257.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="backToAnalysisFlow1" id="BPMNEdge_backToAnalysisFlow1">
        <omgdi:waypoint x="781.0" y="330.0"></omgdi:waypoint>
        <omgdi:waypoint x="780.0" y="65.0"></omgdi:waypoint>
        <omgdi:waypoint x="588.0" y="65.0"></omgdi:waypoint>
        <omgdi:waypoint x="238.0" y="65.0"></omgdi:waypoint>
        <omgdi:waypoint x="238.0" y="319.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="39.0" width="100.0" x="58.0" y="-45.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="backToTreatementFlow1" id="BPMNEdge_backToTreatementFlow1">
        <omgdi:waypoint x="1030.0" y="370.0"></omgdi:waypoint>
        <omgdi:waypoint x="1030.0" y="488.0"></omgdi:waypoint>
        <omgdi:waypoint x="330.0" y="488.0"></omgdi:waypoint>
        <omgdi:waypoint x="330.0" y="366.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="39.0" width="100.0" x="-53.0" y="22.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="backToTraitementFlow3" id="BPMNEdge_backToTraitementFlow3">
        <omgdi:waypoint x="589.0" y="277.0"></omgdi:waypoint>
        <omgdi:waypoint x="588.0" y="319.0"></omgdi:waypoint>
        <omgdi:waypoint x="485.0" y="319.0"></omgdi:waypoint>
        <omgdi:waypoint x="479.0" y="285.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="39.0" width="100.0" x="-52.0" y="8.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toAnalysisFlow2" id="BPMNEdge_toAnalysisFlow2">
        <omgdi:waypoint x="102.0" y="414.0"></omgdi:waypoint>
        <omgdi:waypoint x="238.0" y="374.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="endTreatmentFlow" id="BPMNEdge_endTreatmentFlow">
        <omgdi:waypoint x="609.0" y="257.0"></omgdi:waypoint>
        <omgdi:waypoint x="702.0" y="257.0"></omgdi:waypoint>
        <omgdi:waypoint x="702.0" y="330.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow63" id="BPMNEdge_flow63">
        <omgdi:waypoint x="702.0" y="237.0"></omgdi:waypoint>
        <omgdi:waypoint x="702.0" y="330.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toValidateResponse" id="BPMNEdge_toValidateResponse">
        <omgdi:waypoint x="702.0" y="165.0"></omgdi:waypoint>
        <omgdi:waypoint x="702.0" y="197.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="endClassificationFlow" id="BPMNEdge_endClassificationFlow">
        <omgdi:waypoint x="610.0" y="426.0"></omgdi:waypoint>
        <omgdi:waypoint x="702.0" y="426.0"></omgdi:waypoint>
        <omgdi:waypoint x="702.0" y="370.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toEndOrientationGateway" id="BPMNEdge_toEndOrientationGateway">
        <omgdi:waypoint x="291.0" y="346.0"></omgdi:waypoint>
        <omgdi:waypoint x="310.0" y="346.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="backToEnteringClaimFlow" id="BPMNEdge_backToEnteringClaimFlow">
        <omgdi:waypoint x="330.0" y="366.0"></omgdi:waypoint>
        <omgdi:waypoint x="330.0" y="492.0"></omgdi:waypoint>
        <omgdi:waypoint x="102.0" y="492.0"></omgdi:waypoint>
        <omgdi:waypoint x="102.0" y="469.0"></omgdi:waypoint>
        <bpmndi:BPMNLabel>
          <omgdc:Bounds height="39.0" width="100.0" x="-86.0" y="-2.0"></omgdc:Bounds>
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow64" id="BPMNEdge_flow64">
        <omgdi:waypoint x="722.0" y="350.0"></omgdi:waypoint>
        <omgdi:waypoint x="761.0" y="350.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow65" id="BPMNEdge_flow65">
        <omgdi:waypoint x="330.0" y="326.0"></omgdi:waypoint>
        <omgdi:waypoint x="330.0" y="222.0"></omgdi:waypoint>
        <omgdi:waypoint x="238.0" y="222.0"></omgdi:waypoint>
        <omgdi:waypoint x="238.0" y="319.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow66" id="BPMNEdge_flow66">
        <omgdi:waypoint x="609.0" y="257.0"></omgdi:waypoint>
        <omgdi:waypoint x="638.0" y="284.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="toTestIsDraft" id="BPMNEdge_toTestIsDraft">
        <omgdi:waypoint x="28.0" y="346.0"></omgdi:waypoint>
        <omgdi:waypoint x="83.0" y="346.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="isDraftFlow" id="BPMNEdge_isDraftFlow">
        <omgdi:waypoint x="103.0" y="366.0"></omgdi:waypoint>
        <omgdi:waypoint x="102.0" y="414.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="isNotDraftFlow" id="BPMNEdge_isNotDraftFlow">
        <omgdi:waypoint x="123.0" y="346.0"></omgdi:waypoint>
        <omgdi:waypoint x="186.0" y="346.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>