<?xml version="1.0" encoding="UTF-8"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2"
	name="npdwf:newProductDevelopmentWF">

	<!-- Swimlanes -->

	<swimlane name="initiator" />

	<swimlane name="marketing-brief-group">
		<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
			<pooledactors>#{people.getGroup('GROUP_MarketingBrief')}</pooledactors>
		</assignment>
	</swimlane>

	<swimlane name="needDefinition-group">
		<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
			<pooledactors>#{people.getGroup('GROUP_NeedDefinition')}</pooledactors>
		</assignment>
	</swimlane>
	

	<swimlane name="do-prototype-group">
		<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
			<pooledactors>#{people.getGroup('GROUP_DoPrototype')}</pooledactors>
		</assignment>
	</swimlane>

	<swimlane name="start-production-group">
		<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
			<pooledactors>#{people.getGroup('GROUP_StartProduction')}</pooledactors>
		</assignment>
	</swimlane>

	<swimlane name="faisability-recipe-assignment-group">
		<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
			<pooledactors>#{people.getGroup('GROUP_RecipeAssigners')}</pooledactors>
		</assignment>
	</swimlane>
	
	<swimlane name="faisability-packaging-assignment-group">
		<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
			<pooledactors>#{people.getGroup('GROUP_PackagingAssigners')}</pooledactors>
		</assignment>
	</swimlane>
	
	<swimlane name="faisability-quality-group">
		<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
			<pooledactors>#{people.getGroup('GROUP_Quality')}</pooledactors>
		</assignment>
	</swimlane>

	<swimlane name="validate-group">
		<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
			<pooledactors>#{people.getGroup('GROUP_ValidateFaisability')}</pooledactors>
		</assignment>
	</swimlane>

	<start-state name="initiate-npd">
		<task name="npdwf:initiate-npd" swimlane="initiator" >
		<event type="task-create">
				 <script>
				 		 taskInstance.setVariable("npdwf:npdStatus","Démarré");
			     </script>
			</event>
		</task>
		<transition to="marketing-brief" name="start" ></transition>
	</start-state>


	<!-- Tasks -->

	<task-node name="marketing-brief">
		<task name="npdwf:marketing-brief" swimlane="marketing-brief-group">
			<event type="task-create">
				<action class="fr.becpg.repo.workflow.jbpm.npd.AssignNpdStatus">
					<status>Brief marketing</status>
				</action>
			</event>
			<event type="task-end">
				<action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
					<script>
						<variable name="bpm_assignee" access="write" />
						<expression>
							if (taskInstance.actorId != null)
							people.getPerson(taskInstance.actorId);
							else
							person;
						</expression>
					</script>
				</action>
			</event>
		</task>
		<transition name="submit" to="needDefinition"></transition>
	</task-node>

	<!-- Need Definition -->

	<task-node name="needDefinition">
		<task name="npdwf:needDefinition" swimlane="needDefinition-group">
			<event type="task-create">
				<action class="fr.becpg.repo.workflow.jbpm.npd.AssignNpdStatus">
					<status>Etude du besoin</status>
				</action>
				
			</event>
		<event type="task-end">
				<action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
					<script>
						<variable name="bpm_assignee" access="write" />
						<expression>
							if (taskInstance.actorId != null)
							people.getPerson(taskInstance.actorId);
							else
							person;
						</expression>
					</script>
				</action>
			</event>
		</task>
		<transition name="submit" to="start-needDefinition-validation"></transition>
	</task-node>

	<node name="start-needDefinition-validation">
		<action class="org.alfresco.repo.workflow.jbpm.ForEachFork"> 
			<foreach>#{people.getMembers(people.getGroup('GROUP_ValidateNeedDefinition'))}</foreach> 
				<var>reviewer</var> 
		</action> 
		<transition to="needDefinition-validation"></transition>
	</node>

	<task-node name="needDefinition-validation" >
		<task name="npdwf:needDefinition-validation" >
		    <assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
               <actor>#{reviewer}</actor>
            </assignment>
		</task>
		<transition to="end-needDefinition-validation" name="approve-needDefinition"/>
		<transition to="needDefinition" name="reject-needDefinition"/>
		<transition to="end" name="end" >
		  		<action class="fr.becpg.repo.workflow.jbpm.npd.AssignNpdStatus">
					<status>Stop</status>
				</action>
		</transition>
	</task-node>


	<join name="end-needDefinition-validation">
		<transition name="start-feasibility-analysis" to="start-feasibility-analysis" />
	</join>

	<!-- start-feasibility-analysis : every actor must work -->



	<fork name="start-feasibility-analysis">
	     <event type="node-enter">
	     	<action class="fr.becpg.repo.workflow.jbpm.npd.AssignNpdStatus">
				<status>Faisabilité en  cours</status>
			</action>
	     	<action class="fr.becpg.repo.workflow.jbpm.npd.CreateProduct"/>
	     </event>
		<transition to="feasibility-analysis-recipe-assignement" name="assign-feasibility-analysis-recipe"/>
		<transition to="feasibility-analysis-quality" name="do-feasibility-analysis-quality"/>
		<transition to="feasibility-analysis-packaging-assignement" name="assign-feasibility-analysis-packaging"/>
	</fork>


	<!-- Recipe -->

	<task-node name="feasibility-analysis-recipe-assignement" >
		<task name="npdwf:feasibility-analysis-recipe-assignement" swimlane="faisability-recipe-assignment-group">
			<event type="task-end">
				<action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
					<script>
						<variable name="bpm_assignee" access="write" />
						<expression>
							if (taskInstance.actorId != null)
							people.getPerson(taskInstance.actorId);
							else
							person;
						</expression>
					</script>
				</action>
			</event>
		</task>
		<transition name="assign-feasibility-analysis-recipe" to="feasibility-start-analysis-recipe"></transition>
	</task-node> 

	<node name="feasibility-start-analysis-recipe">
			 <action class="org.alfresco.repo.workflow.jbpm.ForEachFork">
			      <foreach>#{bpm_assignees}</foreach>
			      <var>reviewer</var>
		    </action>
		   <transition  to="feasibility-analysis-recipe" />
	</node>


	<task-node name="feasibility-analysis-recipe">
		<task name="npdwf:feasibility-analysis-recipe">
			<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
				  <actor>#{reviewer}</actor>
			</assignment>
		</task>
		<transition  name="end-feasibility-analysis-recipe" to="end-feasibility-analysis-recipe"></transition>
	</task-node>


	<join name="end-feasibility-analysis-recipe">
		<transition to="end-feasibility-analysis" />
	</join>


	<!-- Packaging -->

	<task-node name="feasibility-analysis-packaging-assignement">
		<task name="npdwf:feasibility-analysis-packaging-assignement" swimlane="faisability-packaging-assignment-group">
			<event type="task-end">
				<action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
					<script>
						<variable name="bpm_assignee" access="write" />
						<expression>
							if (taskInstance.actorId != null)
							people.getPerson(taskInstance.actorId);
							else
							person;
						</expression>
					</script>
				</action>
			</event>
		</task>
		<transition name="assign-feasibility-analysis-packaging" to="feasibility-start-analysis-packaging"></transition>

	</task-node>


 	<node name="feasibility-start-analysis-packaging">
		   <action class="org.alfresco.repo.workflow.jbpm.ForEachFork">
		      <foreach>#{bpm_assignees}</foreach>
		      <var>reviewer</var>
		   </action>
		   <transition name="assign" to="feasibility-analysis-packaging" />
	</node>

	<task-node name="feasibility-analysis-packaging">
		<task name="npdwf:feasibility-analysis-packaging">
			<assignment class="org.alfresco.repo.workflow.jbpm.AlfrescoAssignment">
				  <actor>#{reviewer}</actor>
			</assignment>
		</task>
		<transition name="end-feasibility-analysis-packaging" to="end-feasibility-analysis-packaging"></transition>


	</task-node>

	

	<join name="end-feasibility-analysis-packaging">
		<transition to="end-feasibility-analysis" />
	</join>
	
	<!-- quality -->

	<task-node name="feasibility-analysis-quality">
		<task name="npdwf:feasibility-analysis-quality" swimlane="faisability-quality-group">
			<event type="task-end">
				<action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
					<script>
						<variable name="bpm_assignee" access="write" />
						<expression>
							if (taskInstance.actorId != null)
							people.getPerson(taskInstance.actorId);
							else
							person;
						</expression>
					</script>
				</action>
			</event>
		</task>
		<transition name="end-feasibility-analysis-quality" to="end-feasibility-analysis"></transition>

	</task-node>


	<join name="end-feasibility-analysis">
		<transition to="validate-analysis" />
	</join>

	<!-- end-feasibility-analysis -->

	<task-node name="validate-analysis">
		<task name="npdwf:validate-analysis" swimlane="validate-group">
			<event type="task-create">
				<action class="fr.becpg.repo.workflow.jbpm.common.AssignBusinessDueDate">
					<addDuration>2 business days</addDuration>
				</action>
			</event>
			<event type="task-end">
				<action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
					<script>
						<variable name="bpm_assignee" access="write" />
						<expression>
							if (taskInstance.actorId != null)
							people.getPerson(taskInstance.actorId);
							else
							person;
						</expression>
					</script>
				</action>
			</event>
		</task>
		<transition to="work-on-prototype" name="approve" />
		<transition to="feasibility-analysis-recipe-assignement"	name="reject-recipe-analysis"></transition>
		<transition to="feasibility-analysis-quality"				name="reject-quality-analysis"></transition>
		<transition to="feasibility-analysis-packaging-assignement"		name="reject-packaging-analysis"></transition>
		<transition to="end" name="end" >
		  	<action class="fr.becpg.repo.workflow.jbpm.npd.AssignNpdStatus">
				<status>Stop</status>
			</action>
		</transition>
	</task-node>

	<task-node name="work-on-prototype">
		<task name="npdwf:work-on-prototype" swimlane="do-prototype-group">
			<event type="task-create">
				<action class="fr.becpg.repo.workflow.jbpm.common.AssignBusinessDueDate">
					<addDuration>5 business days</addDuration>
				</action>
			</event>
			<event type="task-end">
				<action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
					<script>
						<variable name="bpm_assignee" access="write" />
						<expression>
							if (taskInstance.actorId != null)
							people.getPerson(taskInstance.actorId);
							else
							person;
						</expression>
					</script>
				</action>
			</event>
		</task>
		<transition name="submit" to="validate-prototype"></transition>
	</task-node>

	<task-node name="validate-prototype">
		<task name="npdwf:validate-prototype" swimlane="validate-group">
			<event type="task-create">
				<action class="fr.becpg.repo.workflow.jbpm.common.AssignBusinessDueDate">
					<addDuration>2 business days</addDuration>
				</action>
			</event>
			<event type="task-end">
				<action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
					<script>
						<variable name="bpm_assignee" access="write" />
						<expression>
							if (taskInstance.actorId != null)
							people.getPerson(taskInstance.actorId);
							else
							person;
						</expression>
					</script>
				</action>
			</event>
		</task>
		<transition name="approve" to="start-production" />
		<transition name="reject" to="work-on-prototype" />
	</task-node>

	<task-node name="start-production">
		<task name="npdwf:start-production" swimlane="start-production-group">
			<event type="task-create">
				<action class="fr.becpg.repo.workflow.jbpm.common.AssignBusinessDueDate">
					<addDuration>2 business days</addDuration>
				</action>
			</event>
			<event type="task-end">
				<action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
					<script>
						<variable name="bpm_assignee" access="write" />
						<expression>
							if (taskInstance.actorId != null)
							people.getPerson(taskInstance.actorId);
							else
							person;
						</expression>
					</script>
				</action>
			</event>
		</task>
		<transition name="submit" to="end">
			<action
				class="fr.becpg.repo.workflow.jbpm.productvalidation.ApproveActionHandler">
				<runas>admin</runas>
			</action>
		</transition>
	</task-node>


	<end-state name="end"></end-state>


</process-definition>
