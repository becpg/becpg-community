<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>becpg-parent</artifactId>
		<groupId>fr.becpg</groupId>
		<version>0.1.3</version>
		<relativePath>../</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>becpg</groupId>
	<artifactId>becpg-core</artifactId>
	<packaging>amp</packaging>
	<name>beCPG core</name>
	<!-- An Alfresco version number must be of the form 1.2.3.4. Using 1.0-SNAPSHOT 
		as the AMP version will create an exception. See http://wiki.alfresco.com/wiki/Developing_an_Alfresco_Module: 
		"The version number must be made up of numeric values separated by dots. 
		For example '2.1.56' is a valid version number, '2.3.4a' is not. " In order 
		to be able to use Maven snapshots we cannot use the <version/> below as the 
		AMP module version. Instead we use the buildnumber-maven-plugin. This requires 
		a scm connection. -->
	<version>0.1.3</version>
	<description>BeCPG repository</description>


	<!-- need to list these as a provided so that Maven doesn't download them 
		and include them in the AMP, they are provided by Alfresco -->
	<dependencies>

		<!-- alfresco -->
		<dependency>
			<groupId>fr.becpg</groupId>
			<artifactId>alfresco-sdk</artifactId>
			<version>${alfresco.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>

		<!-- Birt 3.7 -->
		<dependency>
			<groupId>fr.becpg</groupId>
			<artifactId>birt-sdk</artifactId>
			<version>3.7.1</version>
			<type>pom</type>
		</dependency>		

	
		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.9</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jmock</groupId>
			<artifactId>jmock</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<version>2.0.8</version>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>org.alfresco.sdk</groupId>
			<artifactId>spring-webscripts-1.0.0.CI-SNAPSHOT-tests</artifactId>
			<version>3.4</version>
			<scope>provided</scope>
		</dependency>
		
		
		
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>


		<!-- runtime -->

		<dependency>
			<groupId>net.sf.proguard</groupId>
			<artifactId>proguard</artifactId>
			<version>4.4</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>


		<!-- Don't add here amp dependencies as it will break amp packaging -->
		
		
	</dependencies>
	<properties>
		<webapp.name>becpg-core-webapp</webapp.name>
	</properties>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-nosnapshot-plugin</artifactId>
				<groupId>com.sourcesense.maven</groupId>
				<version>0.0.6</version>
				<executions>
					<execution>
						<id>default</id>
						<phase>initialize</phase>
						<goals>
							<goal>strip</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.0-beta-2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<revisionOnScmFailure>1</revisionOnScmFailure>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<!-- native2ascii -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				<version>1.0-alpha-1</version>
				<inherited>true</inherited>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>native2ascii</goal>
						</goals>
						<configuration>
							<encoding>8859_1</encoding>
							<dest>target/classes/alfresco/module/${project.groupId}-${project.artifactId}</dest>
							<src>src/main/config</src>
							<includes>
								**/*.properties
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- proguard -->
			<!-- <plugin> <groupId>com.pyx4me</groupId> <artifactId>proguard-maven-plugin</artifactId> 
				<version>2.0.4</version> <executions> <execution> <phase>prepare-package</phase> 
				<goals> <goal>proguard</goal> </goals> </execution> </executions> <configuration> 
				<proguardVersion>4.4</proguardVersion> <obfuscate>true</obfuscate> <injar>classes</injar> 
				<options> <option>-dontoptimize</option> <option>-keepdirectories</option> 
				<option>-renamesourcefileattribute SourceFile</option> <option>-keepattributes 
				Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option> 
				<option>-keep public class * { public protected *;}</option> <option>-keepclassmembernames 
				class * {java.lang.Class class$(java.lang.String); java.lang.Class class$(java.lang.String, 
				boolean);}</option> <option>-keepclassmembers enum * {public static **[] 
				values(); public static ** valueOf(java.lang.String);}</option> <option>-keepclassmembers 
				class * implements java.io.Serializable { static final long serialVersionUID; 
				private static final java.io.ObjectStreamField[] serialPersistentFields; 
				private void writeObject(java.io.ObjectOutputStream); private void readObject(java.io.ObjectInputStream); 
				java.lang.Object writeReplace(); java.lang.Object readResolve();}</option> 
				<option>-keep @org.springframework.beans.factory.annotation.Service class 
				*</option> <option>-keep @org.springframework.stereotype.Controller class 
				*</option> <option>-keepclassmembers class * { @org.springframework.beans.factory.annotation.Autowired 
				*; }</option> </options> <libs> <lib>${java.home}/lib/rt.jar</lib> <lib>${java.home}/lib/jsse.jar</lib> 
				</libs> <addMavenDescriptor>false</addMavenDescriptor> </configuration> </plugin> -->
			<plugin>
				<groupId>org.alfresco.maven.plugin</groupId>
				<artifactId>maven-amp-plugin</artifactId>
				<version>3.0.2</version>
				<extensions>true</extensions>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
					<overlays>
						<!-- This sample adds records management module in the finally built 
							AMP <overlay> <groupId>org.org.alfresco</groupId> <artifactId>recordsmanagement</artifactId> 
							<version>2.1.0</version> <type>amp</type> </overlay> -->
						<!-- The current AMP is always last in order to overwrite other modules' 
							modules.properties <overlay></overlay> -->
					</overlays>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Xmx512m -XX:MaxPermSize=128m</argLine>
				</configuration>
			</plugin>
		</plugins>
		<!-- Copies and filters resources in build folder so maven-amp-plugin can 
			pick them up -->
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**README-*</exclude>
					<exclude>**/*.csv</exclude>
				</excludes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.csv</include>
				</includes>
			</resource>
			<!-- Copies and filters AMP config in the proper package 'alfresco/module/becpg.becpg-core' 
				so to enforce full module naming single sourcing from POM properties -->
			<resource>
				<filtering>true</filtering>
				<directory>src/main/config</directory>
				<targetPath>alfresco/module/${project.groupId}-${project.artifactId}</targetPath>
				<excludes>
					<exclude>**README-*</exclude>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
			</testResource>
	<!-- 		<testResource>
				<filtering>true</filtering>
				<directory>.</directory>
				<includes>
					<include>module.properties</include>
				</includes>
				<targetPath>alfresco/module/${project.groupId}-${project.artifactId}</targetPath>
			</testResource> -->
		</testResources>
	</build>
	<profiles>
		<!-- Profile used to trigger war creation and integration within Jetty 
			embedded -->
		<profile>
			<id>webapp</id>
			<build>
				<filters>
					<filter>src/test/properties/${env}/application.properties</filter>
				</filters>
				<defaultGoal>jetty:run-exploded</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-amps</id>
								<phase>process-resources</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<includeTypes>amp</includeTypes>
									<outputDirectory>${project.build.directory}/${webapp.name}</outputDirectory>
									<excludes>META*</excludes>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<!-- This is required to be re-defined explicitly at plugin level 
								as otherwise the 'amp' extension unArchiver won't be available to the maven-dependency-plugin -->
							<dependency>
								<groupId>org.alfresco.maven.plugin</groupId>
								<artifactId>maven-amp-plugin</artifactId>
								<version>3.0.2</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<!-- Runs war packaging when 'integration-test' phase is called -->
							<execution>
								<id>it</id>
								<phase>package</phase>
								<goals>
									<goal>exploded</goal>
								</goals>
								<configuration>
									<archiveClasses>true</archiveClasses>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<primaryArtifact>false</primaryArtifact>
							<!-- Don't remove the following line otherwise WAR and AMP builds 
								will be done in the same folder, with unexpected results -->
							<webappDirectory>${project.build.directory}/${webapp.name}</webappDirectory>
							<archive>
								<addMavenDescriptor>false</addMavenDescriptor>
							</archive>
							<warSourceExcludes>licenses/**</warSourceExcludes>
							<webResources></webResources>
							<webResources>
								<resource>
									<directory>${project.build.testOutputDirectory}</directory>
									<targetPath>WEB-INF/classes</targetPath>
									<filtering>true</filtering>
									<includes>
										<include>**</include>
									</includes>
								</resource>
								<!-- Here we add default this AMP web/ resources -->
								<resource>
									<directory>src/main/webapp</directory>
									<targetPath>WEB-INF/licenses</targetPath>
									<includes>
										<include>licenses/*.*</include>
									</includes>
									<filtering>false</filtering>
								</resource>
								<resource>
									<directory>src/main/override</directory>
									<filtering>false</filtering>
									<includes>
										<include>**</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
						<dependencies>
							<!-- This is required to be re-defined explicitly at plugin level 
								as otherwise the 'amp' extension unArchiver won't be available to the maven-war-plugin -->
							<dependency>
								<groupId>org.alfresco.maven.plugin</groupId>
								<artifactId>maven-amp-plugin</artifactId>
								<version>3.0.2</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
						<version>6.1.9</version>
						<executions>
							<!-- Runs jetty when 'integration-test' phase is called -->
							<execution>
								<id>it</id>
								<phase>integration-test</phase>
								<goals>
									<goal>run-exploded</goal>
								</goals>
								<configuration>
									<contextPath>/${webapp.name}</contextPath>
									<webApp>${project.build.directory}/${webapp.name}</webApp>
									<scanIntervalSeconds>10</scanIntervalSeconds>
									<connectors>
										<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
											<port>8080</port>
											<maxIdleTime>60000</maxIdleTime>
										</connector>
									</connectors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/**.java</exclude>
							</excludes>
							<argLine>-Xmx512m</argLine>
						</configuration>
					</plugin>
				</plugins>


			</build>
			<!-- Here you can add test dependencies you want to have included in the 
				the WAR (not in the AMP, built in the main profile) | | Typical use case: 
				add here additional AMPs that you want to test compatibility of with the 
				current module | -->
			<dependencies>
				<!-- This is the alfresco version you're testing the AMP against. Don't 
					remove if you want jetty to be able to deploy a WAR :) -->
				<dependency>
					<groupId>org.alfresco</groupId>
					<artifactId>alfresco</artifactId>
					<version>${alfresco.version}</version>
					<type>war</type>
					<classifier>community</classifier>
				</dependency>
			</dependencies>
		</profile>

	</profiles>
</project>
